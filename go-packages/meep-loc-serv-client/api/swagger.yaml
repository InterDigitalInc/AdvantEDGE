openapi: 3.0.0
info:
  title: ETSI GS MEC 013 - Location API
  description: "Location Service is AdvantEDGE's implementation of [ETSI MEC ISG MEC013\
    \ Location API](http://www.etsi.org/deliver/etsi_gs/MEC/001_099/013/02.01.01_60/gs_mec013v020101p.pdf)\
    \ <p>The API is based on the Open Mobile Alliance's specification RESTful Network\
    \ API for Zonal Presence <p>[Copyright (c) ETSI 2017](https://forge.etsi.org/etsi-forge-copyright-notice.txt)\
    \ <p>**Micro-service**<br>[meep-loc-serv](https://github.com/InterDigitalInc/AdvantEDGE/tree/master/go-apps/meep-loc-serv)\
    \ <p>**Type & Usage**<br>Edge Service used by edge applications that want to get\
    \ information about Users (UE) and Zone locations <p>**Note**<br>AdvantEDGE supports\
    \ all of Location API endpoints (see below)."
  contact:
    url: https://forge.etsi.org/rep/mec/gs013-location-api
  license:
    name: BSD-3-Clause
    url: https://forge.etsi.org/legal-matters
  version: 2.2.1
externalDocs:
  description: ETSI MEC013 V2.2.1 Location API
  url: http://www.etsi.org/deliver/etsi_gs/MEC/001_099/013/02.02.01_60/gs_mec013v020201p.pdf
servers:
- url: https://localhost/location/v2
tags:
- name: location
paths:
  /queries/distance:
    get:
      tags:
      - location
      summary: UE Distance Lookup of a specific UE
      description: UE Distance Lookup between terminals or a terminal and a location
      operationId: distanceGET
      parameters:
      - name: requester
        in: query
        description: Entity that is requesting the information
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-exportParamName: Requester
      - name: address
        in: query
        description: "address of users (e.g. \"sip\" URI, \"tel\" URI, \"acr\" URI)"
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
        x-exportParamName: AddressMandatory
      - name: latitude
        in: query
        description: Latitude geo position
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: float
        x-exportParamName: Latitude
      - name: longitude
        in: query
        description: Longitude geo position
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: float
        x-exportParamName: Longitude
      responses:
        "200":
          description: Successful response to a distance request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineTerminalDistance'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: queries
  /queries/users:
    get:
      tags:
      - location
      summary: UE Location Lookup of a specific UE or group of UEs
      description: UE Location Lookup of a specific UE or group of UEs
      operationId: usersGET
      parameters:
      - name: zoneId
        in: query
        description: Identifier of zone
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
        x-exportParamName: ZoneId
      - name: accessPointId
        in: query
        description: Identifier of access point
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
        x-exportParamName: AccessPointId
      - name: address
        in: query
        description: "address of users (e.g. \"sip\" URI, \"tel\" URI, \"acr\" URI)"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
        x-exportParamName: Address
      responses:
        "200":
          description: Successful response to users request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineUserList'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: queries
  /queries/zones:
    get:
      tags:
      - location
      summary: Zones information Lookup
      description: Used to get a list of identifiers for zones authorized for use
        by the application.
      operationId: zonesGET
      responses:
        "200":
          description: Successful response to zones request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineZoneList'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: queries
  /queries/zones/{zoneId}:
    get:
      tags:
      - location
      summary: Zones information Lookup
      description: Used to get the information for an authorized zone for use by the
        application.
      operationId: zonesGetById
      parameters:
      - name: zoneId
        in: path
        description: Indentifier of zone
        required: true
        style: simple
        explode: false
        schema:
          type: string
        x-exportParamName: ZoneId
      responses:
        "200":
          description: Successful response to an access point Id request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineZoneInfo'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: queries
  /queries/zones/{zoneId}/accessPoints:
    get:
      tags:
      - location
      summary: Radio Node Location Lookup
      description: Radio Node Location Lookup to retrieve a list of radio nodes associated
        to a zone.
      operationId: apGET
      parameters:
      - name: zoneId
        in: path
        description: Indentifier of zone
        required: true
        style: simple
        explode: false
        schema:
          type: string
        x-exportParamName: ZoneId
      - name: interestRealm
        in: query
        description: "Interest realm of access point (e.g. geographical area, a type\
          \ of industry etc.)."
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-exportParamName: InterestRealm
      responses:
        "200":
          description: Successful response to an access point Id request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineAccessPointList'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: queries
  /queries/zones/{zoneId}/accessPoints/{accessPointId}:
    get:
      tags:
      - location
      summary: Radio Node Location Lookup
      description: Radio Node Location Lookup to retrieve a radio node associated
        to a zone.
      operationId: apByIdGET
      parameters:
      - name: zoneId
        in: path
        description: Indentifier of zone
        required: true
        style: simple
        explode: false
        schema:
          type: string
        x-exportParamName: ZoneId
      - name: accessPointId
        in: path
        description: Identifier of access Point
        required: true
        style: simple
        explode: false
        schema:
          type: string
        x-exportParamName: AccessPointId
      responses:
        "200":
          description: Successful response to an access point Id request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineAccessPointInfo'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: queries
  /subscriptions/area/circle:
    get:
      tags:
      - location
      summary: Retrieves all active subscriptions to area change notifications
      description: This operation is used for retrieving all active subscriptions
        to area change notifications.
      operationId: areaCircleSubListGET
      responses:
        "200":
          description: Response to retrieve area subscriptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineNotificationSubscriptionList'
              example:
                notificationSubscriptionList:
                  circleNotificationSubscription:
                  - clientCorrelator: "0123"
                    callbackReference:
                      callbackData: "1234"
                      notifyURL: http://clientApp.example.com/location_notifications/123456
                    address: acr:10.0.0.1
                    checkImmediate: true
                    enteringLeavingCriteria: Entering
                    frequency: 10
                    latitude: -80.88
                    longitude: 41.277
                    radius: 500
                    trackingAccuracy: 10
                    resourceURL: http://meAppServer.example.com/location/v2/subscriptions/area/circle/subscription123
                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/area/circle
    post:
      tags:
      - location
      summary: Creates a subscription for area change notification
      description: Creates a subscription to the Location Service for an area change
        notification.
      operationId: areaCircleSubPOST
      requestBody:
        description: Subscription to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineCircleNotificationSubscription'
            example:
              circleNotificationSubscription:
                clientCorrelator: "0123"
                callbackReference:
                  callbackData: "1234"
                  notifyURL: http://clientApp.example.com/location_notifications/123456
                address: acr:10.0.0.1
                checkImmediate: true
                enteringLeavingCriteria: Entering
                frequency: 10
                latitude: -80.88
                longitude: 41.277
                radius: 500
                trackingAccuracy: 10
        required: true
      responses:
        "201":
          description: Successful subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineCircleNotificationSubscription'
              example:
                circleNotificationSubscription:
                  clientCorrelator: "0123"
                  callbackReference:
                    callbackData: "1234"
                    notifyURL: http://clientApp.example.com/location_notifications/123456
                  address: acr:10.0.0.1
                  checkImmediate: true
                  enteringLeavingCriteria: Entering
                  frequency: 10
                  latitude: -80.88
                  longitude: 41.277
                  radius: 500
                  trackingAccuracy: 10
                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/area/circle/subscription123
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      callbacks:
        notification:
          '{$request.body#/circleNotificationSubscription.callbackReference.notifyURL}':
            post:
              summary: Callback POST used to send a notification
              description: "Notification from Location service, content based on subscription\
                \ type"
              operationId: circleNotificationPOST
              requestBody:
                description: Subscription notification
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/InlineSubscriptionNotification'
                    example:
                      subscriptionNotification:
                        enteringLeavingCriteria: Entering
                        isFinalNotification: "false,"
                        link:
                          rel: CircleNotificationSubscription
                          href: http://meAppServer.example.com/location/v2/subscriptions/area/circle/sub123
                        terminalLocation:
                          address: acr:10.0.0.1
                          currentLocation:
                            accuracy: 100
                            altitude: 1001.0
                            latitude: -80.86302
                            longitude: 41.277306
                            timestamp:
                              seconds: 1483231138
                              nanoSeconds": 0
                          locationRetrievalStatus: Retrieved
                required: true
              responses:
                "204":
                  description: No Content
      x-swagger-router-controller: subscriptions
  /subscriptions/area/circle/{subscriptionId}:
    get:
      tags:
      - location
      summary: Retrieve subscription information
      description: Get subscription information.
      operationId: areaCircleSubGET
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      responses:
        "200":
          description: Subscription information regarding subscription notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineCircleNotificationSubscription'
              example:
                circleNotificationSubscription:
                  clientCorrelator: "0123"
                  callbackReference:
                    callbackData: "1234"
                    notifyURL: http://clientApp.example.com/location_notifications/123456
                  address: acr:10.0.0.1
                  checkImmediate: true
                  enteringLeavingCriteria: Entering
                  frequency: 10
                  latitude: -80.88
                  longitude: 41.277
                  radius: 500
                  trackingAccuracy: 10
                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/area/circle/subscription123
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
    put:
      tags:
      - location
      summary: Updates a subscription information
      description: Updates a subscription.
      operationId: areaCircleSubPUT
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      requestBody:
        description: Subscription to be modified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineCircleNotificationSubscription'
            example:
              circleNotificationSubscription:
                clientCorrelator: "0123"
                callbackReference:
                  callbackData: "1234"
                  notifyURL: http://clientApp.example.com/location_notifications/123456
                address: acr:10.0.0.1
                checkImmediate: true
                enteringLeavingCriteria: Entering
                frequency: 10
                latitude: -80.88
                longitude: 41.277
                radius: 500
                trackingAccuracy: 10
                resourceURL: http://meAppServer.example.com/location/v2/subscriptions/area/circle/subscription123
        required: true
      responses:
        "200":
          description: Successful subscription to response to subscription notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineCircleNotificationSubscription'
              example:
                circleNotificationSubscription:
                  clientCorrelator: "0123"
                  callbackReference:
                    callbackData: "1234"
                    notifyURL: http://clientApp.example.com/location_notifications/123456
                  address: acr:10.0.0.1
                  checkImmediate: true
                  enteringLeavingCriteria: Entering
                  frequency: 10
                  latitude: -80.88
                  longitude: 41.277
                  radius: 500
                  trackingAccuracy: 10
                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/area/circle/subscription123
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "412":
          description: "Precondition failed :  used when a condition has failed during\
            \ conditional requests, e.g. when using ETags to avoid write conflicts\
            \ when using PUT"
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "422":
          description: "Unprocessable Entity : used to indicate that the server understands\
            \ the content type of the request entity and that the syntax of the request\
            \ entity is correct but that the server is unable to process the contained\
            \ instructions. This error condition can occur if an JSON request body\
            \ is syntactically correct but semantically incorrect, for example if\
            \ the target area for the request is considered too large. This error\
            \ condition can also occur if the capabilities required by the request\
            \ are not supported."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
    delete:
      tags:
      - location
      summary: Cancel a subscription
      description: Method to delete a subscription.
      operationId: areaCircleSubDELETE
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      responses:
        "204":
          description: No Content
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
  /subscriptions/distance:
    get:
      tags:
      - location
      summary: Retrieves all active subscriptions to distance change notifications
      description: This operation is used for retrieving all active subscriptions
        to a distance change notifications.
      operationId: distanceSubListGET
      responses:
        "200":
          description: Response to retrieve area subscriptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineNotificationSubscriptionList'
              example:
                notificationSubscriptionList:
                  distanceNotificationSubscription:
                  - clientCorrelator: "0123"
                    callbackReference:
                      callbackData: "1234"
                      notifyURL: http://clientApp.example.com/location_notifications/123456
                    monitoredAddress:
                    - acr:10.0.0.1
                    - acr:10.0.0.2
                    checkImmediate: true
                    criteria: AllWithinDistance
                    distance: 100
                    frequency: 10
                    referenceAddress: acr:10.0.0.3
                    trackingAccuracy: 10
                    resourceURL: http://meAppServer.example.com/location/v2/subscriptions/distance/sub123
                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/distance
    post:
      tags:
      - location
      summary: Creates a subscription for distance change notification
      description: Creates a subscription to the Location Service for a distance change
        notification.
      operationId: distanceSubPOST
      requestBody:
        description: Subscription to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineDistanceNotificationSubscription'
            example:
              distanceNotificationSubscription:
                clientCorrelator: "0123"
                callbackReference:
                  callbackData: "1234"
                  notifyURL: http://clientApp.example.com/location_notifications/123456
                monitoredAddress:
                - acr:10.0.0.1
                - acr:10.0.0.2
                checkImmediate: true
                criteria: AllWithinDistance
                distance: 100
                frequency: 10
                referenceAddress: acr:10.0.0.3
                trackingAccuracy: 10
        required: true
      responses:
        "201":
          description: Successful subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineDistanceNotificationSubscription'
              example:
                distanceNotificationSubscription:
                  clientCorrelator: "0123"
                  callbackReference:
                    callbackData: "1234"
                    notifyURL: http://clientApp.example.com/location_notifications/123456
                  monitoredAddress:
                  - acr:10.0.0.1
                  - acr:10.0.0.2
                  checkImmediate: true
                  criteria: AllWithinDistance
                  distance: 100
                  frequency: 10
                  referenceAddress: acr:10.0.0.3
                  trackingAccuracy: 10
                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/distance/subscription123
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      callbacks:
        notification:
          '{$request.body#/distanceNotificationSubscription.callbackReference.notifyURL}':
            post:
              summary: Callback POST used to send a notification
              description: "Notification from Location service, content based on subscription\
                \ type"
              operationId: distanceNotificationPOST
              requestBody:
                description: Subscription notification
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/InlineSubscriptionNotification'
                    example:
                      subscriptionNotification:
                        distanceCriteria: AllWithinDistance
                        isFinalNotification: "false,"
                        link:
                          rel: DistanceNotificationSubscription
                          href: http://meAppServer.example.com/location/v2/subscriptions/distance/sub123
                        terminalLocation:
                        - address: acr:10.0.0.1
                          currentLocation:
                            accuracy: 100
                            altitude: 1001.0
                            latitude: -80.86302
                            longitude: 41.277306
                            timestamp:
                              seconds: 1483231138
                              nanoSeconds": 0
                          locationRetrievalStatus: Retrieved
                        - address: acr:10.0.0.2
                          currentLocation:
                            accuracy: 100
                            altitude: 1001.0
                            latitude: -80.86301
                            longitude: 41.277306
                            timestamp:
                              seconds: 1483231138
                              nanoSeconds": 0
                          locationRetrievalStatus: Retrieved
                required: true
              responses:
                "204":
                  description: No Content
      x-swagger-router-controller: subscriptions
  /subscriptions/distance/{subscriptionId}:
    get:
      tags:
      - location
      summary: Retrieve subscription information
      description: Get subscription information.
      operationId: distanceSubGET
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      responses:
        "200":
          description: Subscription information regarding subscription notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineDistanceNotificationSubscription'
              example:
                distanceNotificationSubscription:
                  clientCorrelator: "0123"
                  callbackReference:
                    callbackData: "1234"
                    notifyURL: http://clientApp.example.com/location_notifications/123456
                  monitoredAddress:
                  - acr:10.0.0.1
                  - acr:10.0.0.2
                  checkImmediate: true
                  criteria: AllWithinDistance
                  distance: 100
                  frequency: 10
                  referenceAddress: acr:10.0.0.3
                  trackingAccuracy: 10
                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/distance/subscription123
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
    put:
      tags:
      - location
      summary: Updates a subscription information
      description: Updates a subscription.
      operationId: distanceSubPUT
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      requestBody:
        description: Subscription to be modified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineDistanceNotificationSubscription'
            example:
              distanceNotificationSubscription:
                clientCorrelator: "0123"
                callbackReference:
                  callbackData: "1234"
                  notifyURL: http://clientApp.example.com/location_notifications/123456
                monitoredAddress:
                - acr:10.0.0.1
                - acr:10.0.0.2
                checkImmediate: true
                criteria: AllWithinDistance
                distance: 100
                frequency: 10
                referenceAddress: acr:10.0.0.3
                trackingAccuracy: 10
                resourceURL: http://meAppServer.example.com/location/v2/subscriptions/distance/subscription123
        required: true
      responses:
        "200":
          description: Successful subscription to response to subscription notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineDistanceNotificationSubscription'
              example:
                distanceNotificationSubscription:
                  clientCorrelator: "0123"
                  callbackReference:
                    callbackData: "1234"
                    notifyURL: http://clientApp.example.com/location_notifications/123456
                  monitoredAddress:
                  - acr:10.0.0.1
                  - acr:10.0.0.2
                  checkImmediate: true
                  criteria: AllWithinDistance
                  distance: 100
                  frequency: 10
                  referenceAddress: acr:10.0.0.3
                  trackingAccuracy: 10
                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/distance/subscription123
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "412":
          description: "Precondition failed :  used when a condition has failed during\
            \ conditional requests, e.g. when using ETags to avoid write conflicts\
            \ when using PUT"
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "422":
          description: "Unprocessable Entity : used to indicate that the server understands\
            \ the content type of the request entity and that the syntax of the request\
            \ entity is correct but that the server is unable to process the contained\
            \ instructions. This error condition can occur if an JSON request body\
            \ is syntactically correct but semantically incorrect, for example if\
            \ the target area for the request is considered too large. This error\
            \ condition can also occur if the capabilities required by the request\
            \ are not supported."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
    delete:
      tags:
      - location
      summary: Cancel a subscription
      description: Method to delete a subscription.
      operationId: distanceSubDELETE
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      responses:
        "204":
          description: No Content
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
  /subscriptions/periodic:
    get:
      tags:
      - location
      summary: Retrieves all active subscriptions to periodic notifications
      description: This operation is used for retrieving all active subscriptions
        to periodic notifications.
      operationId: periodicSubListGET
      responses:
        "200":
          description: Response to retrieve area subscriptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineNotificationSubscriptionList'
              example:
                notificationSubscriptionList:
                  periodicNotificationSubscription:
                  - clientCorrelator: "0123"
                    callbackReference:
                      callbackData: "1234"
                      notifyURL: http://clientApp.example.com/location_notifications/123456
                    address: acr:10.0.0.1
                    frequency: 10
                    requestedAccuracy: 10
                    resourceURL: http://meAppServer.example.com/location/v2/subscriptions/periodic/subscription123
                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/periodic
    post:
      tags:
      - location
      summary: Creates a subscription for periodic notification
      description: Creates a subscription to the Location Service for a periodic notification.
      operationId: periodicSubPOST
      requestBody:
        description: Subscription to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlinePeriodicNotificationSubscription'
            example:
              periodicNotificationSubscription:
                clientCorrelator: "0123"
                callbackReference:
                  callbackData: "1234"
                  notifyURL: http://clientApp.example.com/location_notifications/123456
                address: acr:10.0.0.1
                frequency: 10
                requestedAccuracy: 10
        required: true
      responses:
        "201":
          description: Successful subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlinePeriodicNotificationSubscription'
              example:
                periodicNotificationSubscription:
                  clientCorrelator: "0123"
                  callbackReference:
                    callbackData: "1234"
                    notifyURL: http://clientApp.example.com/location_notifications/123456
                  address: acr:10.0.0.1
                  frequency: 10
                  requestedAccuracy: 10
                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/periodic/subscription123
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      callbacks:
        notification:
          '{$request.body#/periodicNotificationSubscription.callbackReference.notifyURL}':
            post:
              summary: Callback POST used to send a notification
              description: "Notification from Location service, content based on subscription\
                \ type"
              operationId: periodicNotificationPOST
              requestBody:
                description: Subscription notification
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/InlineSubscriptionNotification'
                    example:
                      subscriptionNotification:
                        isFinalNotification: "false,"
                        link:
                          rel: PeriodicNotificationSubscription
                          href: http://meAppServer.example.com/location/v2/subscriptions/periodic/sub123
                        terminalLocation:
                          address: acr:10.0.0.1
                          currentLocation:
                            accuracy: 100
                            altitude: 1001.0
                            latitude: -80.86302
                            longitude: 41.277306
                            timestamp:
                              seconds: 1483231138
                              nanoSeconds": 0
                          locationRetrievalStatus: Retrieved
                required: true
              responses:
                "204":
                  description: No Content
      x-swagger-router-controller: subscriptions
  /subscriptions/periodic/{subscriptionId}:
    get:
      tags:
      - location
      summary: Retrieve subscription information
      description: Get subscription information.
      operationId: periodicSubGET
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      responses:
        "200":
          description: Subscription information regarding subscription notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlinePeriodicNotificationSubscription'
              example:
                periodicNotificationSubscription:
                  clientCorrelator: "0123"
                  callbackReference:
                    callbackData: "1234"
                    notifyURL: http://clientApp.example.com/location_notifications/123456
                  address: acr:10.0.0.1
                  frequency: 10
                  requestedAccuracy: 10
                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/periodic/subscription123
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
    put:
      tags:
      - location
      summary: Updates a subscription information
      description: Updates a subscription.
      operationId: periodicSubPUT
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      requestBody:
        description: Subscription to be modified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlinePeriodicNotificationSubscription'
            example:
              periodicNotificationSubscription:
                clientCorrelator: "0123"
                callbackReference:
                  callbackData: "1234"
                  notifyURL: http://clientApp.example.com/location_notifications/123456
                address: acr:10.0.0.1
                frequency: 10
                requestedAccuracy: 10
                resourceURL: http://meAppServer.example.com/location/v2/subscriptions/periodic/subscription123
        required: true
      responses:
        "200":
          description: Successful subscription to response to subscription notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlinePeriodicNotificationSubscription'
              example:
                periodicNotificationSubscription:
                  clientCorrelator: "0123"
                  callbackReference:
                    callbackData: "1234"
                    notifyURL: http://clientApp.example.com/location_notifications/123456
                  address: acr:10.0.0.1
                  frequency: 10
                  requestedAccuracy: 10
                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/periodic/subscription123
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "412":
          description: "Precondition failed :  used when a condition has failed during\
            \ conditional requests, e.g. when using ETags to avoid write conflicts\
            \ when using PUT"
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "422":
          description: "Unprocessable Entity : used to indicate that the server understands\
            \ the content type of the request entity and that the syntax of the request\
            \ entity is correct but that the server is unable to process the contained\
            \ instructions. This error condition can occur if an JSON request body\
            \ is syntactically correct but semantically incorrect, for example if\
            \ the target area for the request is considered too large. This error\
            \ condition can also occur if the capabilities required by the request\
            \ are not supported."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
    delete:
      tags:
      - location
      summary: Cancel a subscription
      description: Method to delete a subscription.
      operationId: periodicSubDELETE
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      responses:
        "204":
          description: No Content
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
  /subscriptions/userTracking:
    get:
      tags:
      - location
      summary: Retrieves all active subscriptions to user tracking notifications
      description: This operation is used for retrieving all active subscriptions
        to user tracking notifications.
      operationId: userTrackingSubListGET
      responses:
        "200":
          description: Response to retrieve user tracking subscriptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineNotificationSubscriptionList'
              example:
                notificationSubscriptionList:
                  userTrackingSubscription:
                  - clientCorrelator: "0123"
                    resourceURL: http://meAppServer.example.com/location/v2/subscriptions/userTracking/subscription123
                    callbackReference:
                      notifyURL: http://clientApp.example.com/location_notifications/123456
                    address: acr:192.0.2.1
                    userEventCriteria:
                    - Transferring
                  - clientCorrelator: "0124"
                    resourceURL: http://meAppServer.example.com/location/v2/subscriptions/userTracking/subscription124
                    callbackReference:
                      notifyURL: http://clientApp.example.com/location_notifications/123456
                    address: acr:192.0.2.2
                    userEventCriteria:
                    - Transferring
                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/userTracking
    post:
      tags:
      - location
      summary: Creates a subscription for user tracking notification
      description: Creates a subscription to the Location Service for user tracking
        change notification.
      operationId: userTrackingSubPOST
      requestBody:
        description: Subscription to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineUserTrackingSubscription'
            example:
              userTrackingSubscription:
                clientCorrelator: "0123"
                callbackReference:
                  notifyURL: http://my.callback.com/location_notifications/some-id
                address: acr:10.0.0.1
                userEventCriteria:
                - Transferring
        required: true
      responses:
        "201":
          description: Successful subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineUserTrackingSubscription'
              example:
                userTrackingSubscription:
                  clientCorrelator: "0123"
                  callbackReference:
                    notifyURL: http://my.callback.com/location_notifications/some-id
                  address: acr:10.0.0.1
                  userEventCriteria:
                  - Transferring
                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/userTracking/sub123
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      callbacks:
        notification:
          '{$request.body#/userTrackingSubscription.callbackReference.notifyURL}':
            post:
              summary: Callback POST used to send a notification
              description: "Notification from Location service, content based on subscription\
                \ type"
              operationId: userTrackingNotificationPOST
              requestBody:
                description: Subscription notification
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/InlineZonalPresenceNotification'
                    example:
                      zonalPresenceNotification:
                        clientCorrelator: "0123"
                        zoneId: zone01
                        address: acr:10.0.0.1
                        userEventType: Transferring
                        currentAccessPointId: ap2
                        previousAccessPointId: ap1
                        timestamp:
                          seconds: 1483231138
                          nanoseconds: 0
                        link:
                          rel: UserTrackingSubscription
                          href: http://meAppServer.example.com/location/v2/subscriptions/userTracking/sub123
                required: true
              responses:
                "204":
                  description: No Content
      x-swagger-router-controller: subscriptions
  /subscriptions/userTracking/{subscriptionId}:
    get:
      tags:
      - location
      summary: Retrieve subscription information
      description: Get subscription information.
      operationId: userTrackingSubGET
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      responses:
        "200":
          description: Subscription information regarding subscription notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineUserTrackingSubscription'
              example:
                userTrackingSubscription:
                  clientCorrelator: "0123"
                  callbackReference:
                    notifyURL: http://my.callback.com/location_notifications/some-id
                  address: acr:10.0.0.1
                  userEventCriteria:
                  - Transferring
                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/userTracking/sub123
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
    put:
      tags:
      - location
      summary: Updates a subscription information
      description: Updates a subscription.
      operationId: userTrackingSubPUT
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      requestBody:
        description: Subscription to be modified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineUserTrackingSubscription'
            example:
              userTrackingSubscription:
                clientCorrelator: "0123"
                callbackReference:
                  notifyURL: http://my.callback.com/location_notifications/some-id
                address: acr:10.0.0.1
                userEventCriteria:
                - Transferring
                resourceURL: http://meAppServer.example.com/location/v2/subscriptions/userTracking/sub123
        required: true
      responses:
        "200":
          description: Successful subscription to response to subscription notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineUserTrackingSubscription'
              example:
                userTrackingSubscription:
                  clientCorrelator: "0123"
                  callbackReference:
                    notifyURL: http://my.callback.com/location_notifications/some-id
                  address: acr:10.0.0.1
                  userEventCriteria:
                  - Transferring
                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/userTracking/sub123
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "412":
          description: "Precondition failed :  used when a condition has failed during\
            \ conditional requests, e.g. when using ETags to avoid write conflicts\
            \ when using PUT"
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "422":
          description: "Unprocessable Entity : used to indicate that the server understands\
            \ the content type of the request entity and that the syntax of the request\
            \ entity is correct but that the server is unable to process the contained\
            \ instructions. This error condition can occur if an JSON request body\
            \ is syntactically correct but semantically incorrect, for example if\
            \ the target area for the request is considered too large. This error\
            \ condition can also occur if the capabilities required by the request\
            \ are not supported."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
    delete:
      tags:
      - location
      summary: Cancel a subscription
      description: Method to delete a subscription.
      operationId: userTrackingSubDELETE
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      responses:
        "204":
          description: No Content
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
  /subscriptions/zonalTraffic:
    get:
      tags:
      - location
      summary: Retrieves all active subscriptions to zonal traffic notifications
      description: This operation is used for retrieving all active subscriptions
        to zonal traffic change notifications.
      operationId: zonalTrafficSubListGET
      responses:
        "200":
          description: Response to retrieve zonal traffic subscriptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineNotificationSubscriptionList'
              example:
                notificationSubscriptionList:
                  zonalTrafficSubscription:
                  - clientCorrelator: "0123"
                    resourceURL: http://meAppServer.example.com/location/v2/subscriptions/zonalTraffic/subscription123
                    callbackReference:
                      notifyURL: http://clientApp.example.com/location_notifications/123456
                    zoneId: zone01
                    userEventCriteria:
                    - Transferring
                  - clientCorrelator: "0124"
                    resourceURL: http://meAppServer.example.com/location/v2/subscriptions/zonalTraffic/subscription124
                    callbackReference:
                      notifyURL: http://clientApp.example.com/location_notifications/123456
                    zoneId: zone02
                    userEventCriteria:
                    - Transferring
                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/zonalTraffic
    post:
      tags:
      - location
      summary: Creates a subscription for zonal traffic notification
      description: Creates a subscription to the Location Service for zonal traffic
        change notification.
      operationId: zonalTrafficSubPOST
      requestBody:
        description: Subscription to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineZonalTrafficSubscription'
            example:
              zonalTrafficSubscription:
                clientCorrelator: "0123"
                callbackReference:
                  notifyURL: http://my.callback.com/location_notifications/some-id
                zoneId: zone01
                userEventCriteria:
                - Transferring
        required: true
      responses:
        "201":
          description: Successful subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineZonalTrafficSubscription'
              example:
                zonalTrafficSubscription:
                  clientCorrelator: "0123"
                  callbackReference:
                    notifyURL: http://my.callback.com/location_notifications/some-id
                  zoneId: zone01
                  userEventCriteria:
                  - Transferring
                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/zonalTraffic/sub123
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      callbacks:
        notification:
          '{$request.body#/zonalTrafficSubscription.callbackReference.notifyURL}':
            post:
              summary: Callback POST used to send a notification
              description: "Notification from Location service, content based on subscription\
                \ type"
              operationId: zonalTrafficNotificationPOST
              requestBody:
                description: Subscription notification
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/InlineZonalPresenceNotification'
                    example:
                      zonalPresenceNotification:
                        clientCorrelator: "0123"
                        zoneId: zone01
                        address: acr:10.0.0.1
                        userEventType: Transferring
                        currentAccessPointId: ap2
                        previousAccessPointId: ap1
                        timestamp:
                          seconds: 1483231138
                          nanoseconds: 0
                        link:
                          rel: ZonalTrafficSubscription
                          href: http://meAppServer.example.com/location/v2/subscriptions/zonalTraffic/sub123
                required: true
              responses:
                "204":
                  description: No Content
      x-swagger-router-controller: subscriptions
  /subscriptions/zonalTraffic/{subscriptionId}:
    get:
      tags:
      - location
      summary: Retrieve subscription information
      description: Get subscription information.
      operationId: zonalTrafficSubGET
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      responses:
        "200":
          description: Subscription information regarding subscription notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineZonalTrafficSubscription'
              example:
                zonalTrafficSubscription:
                  clientCorrelator: "0123"
                  callbackReference:
                    notifyURL: http://my.callback.com/location_notifications/some-id
                  zoneId: zone01
                  userEventCriteria:
                  - Transferring
                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/zonalTraffic/sub123
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
    put:
      tags:
      - location
      summary: Updates a subscription information
      description: Updates a subscription.
      operationId: zonalTrafficSubPUT
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      requestBody:
        description: Subscription to be modified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineZonalTrafficSubscription'
            example:
              zonalTrafficSubscription:
                clientCorrelator: "0123"
                callbackReference:
                  notifyURL: http://my.callback.com/location_notifications/some-id
                zoneId: zone01
                userEventCriteria:
                - Transferring
                resourceURL: http://meAppServer.example.com/location/v2/subscriptions/zonalTraffic/sub123
        required: true
      responses:
        "200":
          description: Successful subscription to response to subscription notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineZonalTrafficSubscription'
              example:
                zonalTrafficSubscription:
                  clientCorrelator: "0123"
                  callbackReference:
                    notifyURL: http://my.callback.com/location_notifications/some-id
                  zoneId: zone01
                  userEventCriteria:
                  - Transferring
                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/zonalTraffic/sub123
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "412":
          description: "Precondition failed :  used when a condition has failed during\
            \ conditional requests, e.g. when using ETags to avoid write conflicts\
            \ when using PUT"
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "422":
          description: "Unprocessable Entity : used to indicate that the server understands\
            \ the content type of the request entity and that the syntax of the request\
            \ entity is correct but that the server is unable to process the contained\
            \ instructions. This error condition can occur if an JSON request body\
            \ is syntactically correct but semantically incorrect, for example if\
            \ the target area for the request is considered too large. This error\
            \ condition can also occur if the capabilities required by the request\
            \ are not supported."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
    delete:
      tags:
      - location
      summary: Cancel a subscription
      description: Method to delete a subscription.
      operationId: zonalTrafficSubDELETE
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      responses:
        "204":
          description: No Content
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
  /subscriptions/zoneStatus:
    get:
      tags:
      - location
      summary: Retrieves all active subscriptions to zone status notifications
      description: This operation is used for retrieving all active subscriptions
        to zone status change notifications.
      operationId: zoneStatusSubListGET
      responses:
        "200":
          description: Response to retrieve zone status subscriptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineNotificationSubscriptionList'
              example:
                notificationSubscriptionList:
                  zoneStatusSubscription:
                  - clientCorrelator: "0123"
                    resourceURL: http://example.com/exampleAPI/location/v2/subscriptions/zoneStatus/subscription123
                    callbackReference:
                      notifyURL: http://clientApp.example.com/location_notifications/123456
                    zoneId: zone01
                    numberOfUsersZoneThreshold: 500
                    operationStatus:
                    - Serviceable
                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/zoneStatus
    post:
      tags:
      - location
      summary: Creates a subscription for zone status notification
      description: Creates a subscription to the Location Service for zone status
        change notification.
      operationId: zoneStatusSubPOST
      requestBody:
        description: Subscription to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineZoneStatusSubscription'
            example:
              zoneStatusSubscription:
                clientCorrelator: "0123"
                callbackReference:
                  notifyURL: http://my.callback.com/location_notifications/some-id
                zoneId: zone01
                numberOfUsersZoneThreshold: 500
                operationStatus:
                - Serviceable
        required: true
      responses:
        "201":
          description: Successful subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineZoneStatusSubscription'
              example:
                zoneStatusSubscription:
                  clientCorrelator: "0123"
                  callbackReference:
                    notifyURL: http://my.callback.com/location_notifications/some-id
                  zoneId: zone01
                  numberOfUsersZoneThreshold: 500
                  operationStatus:
                  - Serviceable
                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/zoneStatus/sub123
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      callbacks:
        notification:
          '{$request.body#/zoneStatusSubscription.callbackReference.notifyURL}':
            post:
              summary: Callback POST used to send a notification
              description: "Notification from Location service, content based on subscription\
                \ type"
              operationId: zoneStatusNotificationPOST
              requestBody:
                description: Subscription notification
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/InlineZoneStatusNotification'
                    example:
                      zoneStatusNotification:
                        clientCorrelator: "0123"
                        zoneId: zone01
                        accessPointId: poa1
                        operationStatus: Serviceable
                        numberOfUsersInZone: "20"
                        numberOfUsersInAP: "12"
                        timestamp:
                          seconds: 1483231138
                          nanoseconds: 0
                        link:
                          rel: ZoneStatusSubscription
                          href: http://meAppServer.example.com/location/v2/subscriptions/zoneStatus/sub123
                required: true
              responses:
                "204":
                  description: No Content
      x-swagger-router-controller: subscriptions
  /subscriptions/zoneStatus/{subscriptionId}:
    get:
      tags:
      - location
      summary: Retrieve subscription information
      description: Get subscription information.
      operationId: zoneStatusSubGET
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      responses:
        "200":
          description: Subscription information regarding subscription notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineZoneStatusSubscription'
              example:
                zoneStatusSubscription:
                  clientCorrelator: "0123"
                  callbackReference:
                    notifyURL: http://my.callback.com/location_notifications/some-id
                  zoneId: zone01
                  numberOfUsersZoneThreshold: 500
                  operationStatus:
                  - Serviceable
                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/zoneStatus/sub123
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
    put:
      tags:
      - location
      summary: Updates a subscription information
      description: Updates a subscription.
      operationId: zoneStatusSubPUT
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      requestBody:
        description: Subscription to be modified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineZoneStatusSubscription'
            example:
              zoneStatusSubscription:
                clientCorrelator: "0123"
                callbackReference:
                  notifyURL: http://my.callback.com/location_notifications/some-id
                zoneId: zone01
                numberOfUsersZoneThreshold: 500
                operationStatus:
                - Serviceable
                resourceURL: http://meAppServer.example.com/location/v2/subscriptions/zoneStatus/sub123
        required: true
      responses:
        "200":
          description: Successful subscription to response to subscription notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineZoneStatusSubscription'
              example:
                zoneStatusSubscription:
                  clientCorrelator: "0123"
                  callbackReference:
                    notifyURL: http://my.callback.com/location_notifications/some-id
                  zoneId: zone01
                  numberOfUsersZoneThreshold: 500
                  operationStatus:
                  - Serviceable
                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/zoneStatus/sub123
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "412":
          description: "Precondition failed :  used when a condition has failed during\
            \ conditional requests, e.g. when using ETags to avoid write conflicts\
            \ when using PUT"
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "422":
          description: "Unprocessable Entity : used to indicate that the server understands\
            \ the content type of the request entity and that the syntax of the request\
            \ entity is correct but that the server is unable to process the contained\
            \ instructions. This error condition can occur if an JSON request body\
            \ is syntactically correct but semantically incorrect, for example if\
            \ the target area for the request is considered too large. This error\
            \ condition can also occur if the capabilities required by the request\
            \ are not supported."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
    delete:
      tags:
      - location
      summary: Cancel a subscription
      description: Method to delete a subscription.
      operationId: zoneStatusSubDELETE
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      responses:
        "204":
          description: No Content
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
  /notifications/mec011/appTermination:
    post:
      tags:
      - location
      summary: MEC011 Application Termination notification for self termination
      description: Terminates itself.
      operationId: mec011AppTerminationPOST
      requestBody:
        description: Termination notification details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppTerminationNotification'
            example:
              notificationType: AppTerminationNotification
              operationAction: TERMINATING
              maxGracefulTimeout: 10
              links:
                subscription:
                  href: http://mec011Server.example.com/mec_app_support/v1/applications/appId1234/subscriptions/sub123
                confirmTermination:
                  href: http://mec011Server.example.com/mec_app_support/v1/confirm_termination
        required: true
      responses:
        "204":
          description: No Content
      x-swagger-router-controller: notifications
components:
  schemas:
    AccessPointInfo:
      required:
      - accessPointId
      - connectionType
      - numberOfUsers
      - operationStatus
      - resourceURL
      type: object
      properties:
        accessPointId:
          type: string
          description: Identifier of access point.
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: string
        connectionType:
          $ref: '#/components/schemas/ConnectionType'
        interestRealm:
          type: string
          description: Interest realm of access point.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        locationInfo:
          $ref: '#/components/schemas/LocationInfo'
        numberOfUsers:
          type: integer
          description: Number of users currently on the access point.
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: integer
        operationStatus:
          $ref: '#/components/schemas/OperationStatus'
        resourceURL:
          type: string
          description: Self referring URL
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: anyURI
        timezone:
          type: string
          description: Time zone of access point.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: dateTimeStamp
      description: A type containing access point information.
      example:
        locationInfo:
          altitude: 5.962134
          orientationMajorAxis: 4
          shape: 7
          confidence: 5
          latitude:
          - 9.301444
          - 9.301444
          offsetAngle: 2
          accuracy: 0
          includedAngle: 2
          velocity:
            verticalUncertainty: 4
            horizontalSpeed: 1
            bearing: 1
            uncertainty: 6
            verticalSpeed: 1
            velocityType: 7
          accuracySemiMinor: 1
          innerRadius: 7
          accuracyAltitude: 6
          uncertaintyRadius: 1
          longitude:
          - 3.6160767
          - 3.6160767
          timestamp:
            seconds: 5
            nanoSeconds: 1
        operationStatus: Serviceable
        resourceURL: resourceURL
        numberOfUsers: 0
        timezone: timezone
        accessPointId: accessPointId
        interestRealm: interestRealm
        connectionType: Femto
    AccessPointList:
      required:
      - resourceURL
      - zoneId
      type: object
      properties:
        accessPoint:
          type: array
          description: Collection of the access point information list.
          items:
            $ref: '#/components/schemas/AccessPointInfo'
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: AccessPointInfo
        resourceURL:
          type: string
          description: Self referring URL
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: anyURI
        zoneId:
          type: string
          description: Identifier of zone
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: string
      description: A type containing list of access points.
      example:
        resourceURL: resourceURL
        zoneId: zoneId
        accessPoint:
        - locationInfo:
            altitude: 5.962134
            orientationMajorAxis: 4
            shape: 7
            confidence: 5
            latitude:
            - 9.301444
            - 9.301444
            offsetAngle: 2
            accuracy: 0
            includedAngle: 2
            velocity:
              verticalUncertainty: 4
              horizontalSpeed: 1
              bearing: 1
              uncertainty: 6
              verticalSpeed: 1
              velocityType: 7
            accuracySemiMinor: 1
            innerRadius: 7
            accuracyAltitude: 6
            uncertaintyRadius: 1
            longitude:
            - 3.6160767
            - 3.6160767
            timestamp:
              seconds: 5
              nanoSeconds: 1
          operationStatus: Serviceable
          resourceURL: resourceURL
          numberOfUsers: 0
          timezone: timezone
          accessPointId: accessPointId
          interestRealm: interestRealm
          connectionType: Femto
        - locationInfo:
            altitude: 5.962134
            orientationMajorAxis: 4
            shape: 7
            confidence: 5
            latitude:
            - 9.301444
            - 9.301444
            offsetAngle: 2
            accuracy: 0
            includedAngle: 2
            velocity:
              verticalUncertainty: 4
              horizontalSpeed: 1
              bearing: 1
              uncertainty: 6
              verticalSpeed: 1
              velocityType: 7
            accuracySemiMinor: 1
            innerRadius: 7
            accuracyAltitude: 6
            uncertaintyRadius: 1
            longitude:
            - 3.6160767
            - 3.6160767
            timestamp:
              seconds: 5
              nanoSeconds: 1
          operationStatus: Serviceable
          resourceURL: resourceURL
          numberOfUsers: 0
          timezone: timezone
          accessPointId: accessPointId
          interestRealm: interestRealm
          connectionType: Femto
    CallbackReference:
      required:
      - notifyURL
      type: object
      properties:
        callbackData:
          type: string
          description: "Data the application can register with the server when subscribing\
            \ to notifications, and that are passed back unchanged in each of the\
            \ related notifications. These data can be used by the application in\
            \ the processing of the notification, e.g. for correlation purposes."
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        notificationFormat:
          $ref: '#/components/schemas/NotificationFormat'
        notifyURL:
          type: string
          description: Notify Callback URL
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: anyURI
      example:
        notificationFormat: XML
        callbackData: callbackData
        notifyURL: notifyURL
    CircleNotificationSubscription:
      required:
      - address
      - callbackReference
      - checkImmediate
      - enteringLeavingCriteria
      - frequency
      - latitude
      - longitude
      - radius
      - trackingAccuracy
      type: object
      properties:
        address:
          type: array
          description: "Address of terminals to monitor (e.g. \"sip\" URI, \"tel\"\
            \ URI, \"acr\" URI)"
          items:
            type: string
          x-etsi-mec-cardinality: 1..N
          x-etsi-mec-origin-type: anyURI
        callbackReference:
          $ref: '#/components/schemas/CallbackReference'
        checkImmediate:
          type: boolean
          description: Check location immediately after establishing notification.
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: boolean
        clientCorrelator:
          type: string
          description: A correlator that the client can use to tag this particular
            resource representation during a request to create a resource on the server.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        count:
          type: integer
          description: "Maximum number of notifications per individual address. For\
            \ no maximum, either do not include this element or specify a value of\
            \ zero. Default value is 0."
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: int
        duration:
          type: integer
          description: "Period of time (in seconds) notifications are provided for.\
            \ If set to “0” (zero), a default duration time, which is specified by\
            \ the service policy, will be used. If the parameter is omitted, the notifications\
            \ will continue until the maximum duration time, which is specified by\
            \ the service policy, unless the notifications are stopped by deletion\
            \ of subscription for notifications."
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: int
        enteringLeavingCriteria:
          $ref: '#/components/schemas/EnteringLeavingCriteria'
        frequency:
          type: integer
          description: Maximum frequency (in seconds) of notifications per subscription
            (can also be considered minimum time between notifications).
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: int
        latitude:
          type: number
          description: Latitude of center point.
          format: float
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: float
        link:
          type: array
          description: Link to other resources that are in relationship with the resource.
          items:
            $ref: '#/components/schemas/Link'
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: Link
        longitude:
          type: number
          description: Longitude of center point.
          format: float
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: float
        radius:
          type: number
          description: Radius circle around center point in meters.
          format: float
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: float
        requester:
          type: string
          description: "Identifies the entity that is requesting the information (e.g.\
            \ \"sip\" URI, \"tel\" URI, \"acr\" URI)"
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: anyURI
        resourceURL:
          type: string
          description: Self referring URL
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: anyURI
        trackingAccuracy:
          type: number
          description: Number of meters of acceptable error in tracking distance.
          format: float
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: float
      description: "A type containing data for notifications, when the area is defined\
        \ as a circle."
      example:
        requester: requester
        trackingAccuracy: 7.0614014
        address:
        - address
        - address
        callbackReference:
          notificationFormat: XML
          callbackData: callbackData
          notifyURL: notifyURL
        latitude: 5.962134
        count: 0
        link:
        - rel: rel
          href: href
        - rel: rel
          href: href
        frequency: 1
        duration: 6
        enteringLeavingCriteria: Entering
        resourceURL: resourceURL
        clientCorrelator: clientCorrelator
        checkImmediate: true
        radius: 2.302136
        longitude: 5.637377
    ConnectionType:
      type: string
      description: The connection type for the access point
      enum:
      - Femto
      - LTE-femto
      - Smallcell
      - LTE-smallcell
      - Wifi
      - Pico
      - Micro
      - Macro
      - Wimax
      - Unknown
    DistanceCriteria:
      type: string
      enum:
      - AllWithinDistance
      - AnyWithinDistance
      - AllBeyondDistance
      - AnyBeyondDistance
    DistanceNotificationSubscription:
      required:
      - callbackReference
      - checkImmediate
      - criteria
      - distance
      - frequency
      - monitoredAddress
      - trackingAccuracy
      type: object
      properties:
        callbackReference:
          $ref: '#/components/schemas/CallbackReference'
        checkImmediate:
          type: boolean
          description: Check location immediately after establishing notification.
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: boolean
        clientCorrelator:
          type: string
          description: A correlator that the client can use to tag this particular
            resource representation during a request to create a resource on the server.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        count:
          type: integer
          description: "Maximum number of notifications per individual address. For\
            \ no maximum, either do not include this element or specify a value of\
            \ zero. Default value is 0."
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: int
        criteria:
          $ref: '#/components/schemas/DistanceCriteria'
        distance:
          type: number
          description: Distance between devices that shall be monitored.
          format: float
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: float
        duration:
          type: integer
          description: "Period of time (in seconds) notifications are provided for.\
            \ If set to “0” (zero), a default duration time, which is specified by\
            \ the service policy, will be used. If the parameter is omitted, the notifications\
            \ will continue until the maximum duration time, which is specified by\
            \ the service policy, unless the notifications are stopped by deletion\
            \ of subscription for notifications."
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: int
        frequency:
          type: integer
          description: Maximum frequency (in seconds) of notifications per subscription
            (can also be considered minimum time between notifications).
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: int
        link:
          type: array
          description: Link to other resources that are in relationship with the resource.
          items:
            $ref: '#/components/schemas/Link'
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: Link
        monitoredAddress:
          type: array
          description: "Contains addresses of devices to monitor (e.g., 'sip' URI,\
            \ 'tel' URI, 'acr' URI)"
          items:
            type: string
          x-etsi-mec-cardinality: 1..N
          x-etsi-mec-origin-type: anyURI
        referenceAddress:
          type: array
          description: "Indicates address of each device that will be used as reference\
            \ devices from which the distances towards monitored devices indicated\
            \ in the Addresses will be monitored (e.g., 'sip' URI, 'tel' URI, 'acr'\
            \ URI)"
          items:
            type: string
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: anyURI
        requester:
          type: string
          description: "Identifies the entity that is requesting the information (e.g.\
            \ \"sip\" URI, \"tel\" URI, \"acr\" URI)"
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: anyURI
        resourceURL:
          type: string
          description: Self referring URL
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: anyURI
        trackingAccuracy:
          type: number
          description: Number of meters of acceptable error in tracking distance.
          format: float
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: float
      description: "A type containing data for distance subscription, with reference\
        \ to other devices."
      example:
        requester: requester
        trackingAccuracy: 7.386282
        distance: 3.6160767
        callbackReference: null
        criteria: AllWithinDistance
        count: 9
        link:
        - null
        - null
        frequency: 4
        duration: 2
        monitoredAddress:
        - monitoredAddress
        - monitoredAddress
        referenceAddress:
        - referenceAddress
        - referenceAddress
        resourceURL: resourceURL
        clientCorrelator: clientCorrelator
        checkImmediate: true
    EnteringLeavingCriteria:
      type: string
      enum:
      - Entering
      - Leaving
    Link:
      required:
      - href
      - rel
      type: object
      properties:
        href:
          type: string
          description: URI
          format: anyURI
        rel:
          type: string
          description: Describes the relationship between the URI and the resource.
      description: Link to other resources
      example:
        rel: rel
        href: href
    LocationInfo:
      required:
      - latitude
      - longitude
      - shape
      type: object
      properties:
        accuracy:
          type: integer
          description: "Horizontal accuracy / (semi-major) uncertainty of location\
            \ provided in meters, as defined in ETSI TS 123 032 [14]. Present only\
            \ if \"shape\" equals 4, 5 or 6"
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        accuracyAltitude:
          type: integer
          description: "Altitude accuracy / uncertainty of location provided in meters,\
            \ as defined in ETSI TS 123 032 [14]. Present only if \"shape\" equals\
            \ 3 or 4"
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        accuracySemiMinor:
          type: integer
          description: "Horizontal accuracy / (semi-major) uncertainty of location\
            \ provided in meters, as defined in ETSI TS 123 032 [14]. Present only\
            \ if \"shape\" equals 4, 5 or 6"
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        altitude:
          type: number
          description: Location altitude relative to the WGS84 ellipsoid surface.
          format: float
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Float
        confidence:
          type: integer
          description: "Confidence by which the position of a target entity is known\
            \ to be within the shape description, expressed as a percentage and defined\
            \ in ETSI TS 123 032 [14]. Present only if \"shape\" equals 1, 4 or 6"
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        includedAngle:
          type: integer
          description: Present only if "shape" equals 6
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        innerRadius:
          type: integer
          description: Present only if "shape" equals 6
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        latitude:
          minItems: 1
          type: array
          description: "Location latitude, expressed in the range -90° to +90°. Cardinality\
            \ greater than one only if \"shape\" equals 7."
          items:
            type: number
            format: float
          x-etsi-mec-cardinality: 1..N
          x-etsi-mec-origin-type: Float
        longitude:
          minItems: 1
          type: array
          description: "Location longitude, expressed in the range -180° to +180°\
            . Cardinality greater than one only if \"shape\" equals 7."
          items:
            type: number
            format: float
          x-etsi-mec-cardinality: 1..N
          x-etsi-mec-origin-type: Float
        offsetAngle:
          type: integer
          description: Present only if "shape" equals 6
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        orientationMajorAxis:
          type: integer
          description: "Angle of orientation of the major axis, expressed in the range\
            \ 0° to 180°, as defined in ETSI TS 123 032 [14]. Present only if \"shape\"\
            \ equals 4 or 6"
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        shape:
          type: integer
          description: "Shape information, as detailed in ETSI TS 123 032 [14], associated\
            \ with the reported location coordinate: <p>1 = ELLIPSOID_ARC <p>2 = ELLIPSOID_POINT\
            \ <p>3 = ELLIPSOID_POINT_ALTITUDE <p>4 = ELLIPSOID_POINT_ALTITUDE_UNCERT_ELLIPSOID\
            \ <p>5 = ELLIPSOID_POINT_UNCERT_CIRCLE <p>6 = ELLIPSOID_POINT_UNCERT_ELLIPSE\
            \ <p>7 = POLYGON"
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Enum_inlined
        timestamp:
          $ref: '#/components/schemas/TimeStamp'
        uncertaintyRadius:
          type: integer
          description: Present only if "shape" equals 6
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        velocity:
          $ref: '#/components/schemas/LocationInfo_velocity'
      example:
        altitude: 5.962134
        orientationMajorAxis: 4
        shape: 7
        confidence: 5
        latitude:
        - 9.301444
        - 9.301444
        offsetAngle: 2
        accuracy: 0
        includedAngle: 2
        velocity:
          verticalUncertainty: 4
          horizontalSpeed: 1
          bearing: 1
          uncertainty: 6
          verticalSpeed: 1
          velocityType: 7
        accuracySemiMinor: 1
        innerRadius: 7
        accuracyAltitude: 6
        uncertaintyRadius: 1
        longitude:
        - 3.6160767
        - 3.6160767
        timestamp:
          seconds: 5
          nanoSeconds: 1
      x-etsi-ref: 6.5.3
    NotificationFormat:
      type: string
      enum:
      - XML
      - JSON
    NotificationSubscriptionList:
      required:
      - resourceURL
      type: object
      properties:
        circleNotificationSubscription:
          minItems: 0
          type: array
          description: "Collection of CircleNotificationSubscription elements, see\
            \ note 2."
          items:
            $ref: '#/components/schemas/CircleNotificationSubscription'
          x-etsi-mec-cardinality: 0.. N
          x-etsi-mec-origin-type: CircleNotificationSubscription
        distanceNotificationSubscription:
          minItems: 0
          type: array
          description: "Collection of DistanceNotificationSubscription elements, see\
            \ note 2."
          items:
            $ref: '#/components/schemas/DistanceNotificationSubscription'
          x-etsi-mec-cardinality: 0.. N
          x-etsi-mec-origin-type: DistanceNotificationSubscription
        periodicNotificationSubscription:
          minItems: 0
          type: array
          description: "Collection of PeriodicNotificationSubscription elements, see\
            \ note 2."
          items:
            $ref: '#/components/schemas/PeriodicNotificationSubscription'
          x-etsi-mec-cardinality: 0.. N
          x-etsi-mec-origin-type: PeriodicNotificationSubscription
        resourceURL:
          type: string
          description: "Self-referring URL, see note 1."
          format: uri
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: AnyURI
        userTrackingSubscription:
          minItems: 0
          type: array
          description: "Collection of UserTrackingSubscription elements, see note\
            \ 1."
          items:
            $ref: '#/components/schemas/UserTrackingSubscription'
          x-etsi-mec-cardinality: 0.. N
          x-etsi-mec-origin-type: UserTrackingSubscription
        zonalTrafficSubscription:
          minItems: 0
          type: array
          description: "Collection of ZonalTrafficSubscription elements, see note\
            \ 1."
          items:
            $ref: '#/components/schemas/ZonalTrafficSubscription'
          x-etsi-mec-cardinality: 0.. N
          x-etsi-mec-origin-type: ZonalTrafficSubscription
        zoneStatusSubscription:
          minItems: 0
          type: array
          description: "Collection of ZoneStatusSubscription elements, see note 1."
          items:
            $ref: '#/components/schemas/ZoneStatusSubscription'
          x-etsi-mec-cardinality: 0.. N
          x-etsi-mec-origin-type: ZoneStatusSubscription
      example:
        distanceNotificationSubscription:
        - requester: requester
          trackingAccuracy: 7.386282
          distance: 3.6160767
          callbackReference: null
          criteria: AllWithinDistance
          count: 9
          link:
          - null
          - null
          frequency: 4
          duration: 2
          monitoredAddress:
          - monitoredAddress
          - monitoredAddress
          referenceAddress:
          - referenceAddress
          - referenceAddress
          resourceURL: resourceURL
          clientCorrelator: clientCorrelator
          checkImmediate: true
        - requester: requester
          trackingAccuracy: 7.386282
          distance: 3.6160767
          callbackReference: null
          criteria: AllWithinDistance
          count: 9
          link:
          - null
          - null
          frequency: 4
          duration: 2
          monitoredAddress:
          - monitoredAddress
          - monitoredAddress
          referenceAddress:
          - referenceAddress
          - referenceAddress
          resourceURL: resourceURL
          clientCorrelator: clientCorrelator
          checkImmediate: true
        circleNotificationSubscription:
        - requester: requester
          trackingAccuracy: 7.0614014
          address:
          - address
          - address
          callbackReference:
            notificationFormat: XML
            callbackData: callbackData
            notifyURL: notifyURL
          latitude: 5.962134
          count: 0
          link:
          - rel: rel
            href: href
          - rel: rel
            href: href
          frequency: 1
          duration: 6
          enteringLeavingCriteria: Entering
          resourceURL: resourceURL
          clientCorrelator: clientCorrelator
          checkImmediate: true
          radius: 2.302136
          longitude: 5.637377
        - requester: requester
          trackingAccuracy: 7.0614014
          address:
          - address
          - address
          callbackReference:
            notificationFormat: XML
            callbackData: callbackData
            notifyURL: notifyURL
          latitude: 5.962134
          count: 0
          link:
          - rel: rel
            href: href
          - rel: rel
            href: href
          frequency: 1
          duration: 6
          enteringLeavingCriteria: Entering
          resourceURL: resourceURL
          clientCorrelator: clientCorrelator
          checkImmediate: true
          radius: 2.302136
          longitude: 5.637377
        resourceURL: http://example.com/aeiou
        userTrackingSubscription:
        - address: address
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          userEventCriteria:
          - Entering
          - Entering
        - address: address
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          userEventCriteria:
          - Entering
          - Entering
        zonalTrafficSubscription:
        - duration: 6
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          zoneId: zoneId
          interestRealm:
          - interestRealm
          - interestRealm
          userEventCriteria:
          - null
          - null
        - duration: 6
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          zoneId: zoneId
          interestRealm:
          - interestRealm
          - interestRealm
          userEventCriteria:
          - null
          - null
        zoneStatusSubscription:
        - operationStatus:
          - Serviceable
          - Serviceable
          numberOfUsersAPThreshold: 7
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          zoneId: zoneId
          numberOfUsersZoneThreshold: 1
        - operationStatus:
          - Serviceable
          - Serviceable
          numberOfUsersAPThreshold: 7
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          zoneId: zoneId
          numberOfUsersZoneThreshold: 1
        periodicNotificationSubscription:
        - duration: 1
          requester: requester
          address:
          - address
          - address
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          link:
          - null
          - null
          frequency: 1
          requestedAccuracy: 1
        - duration: 1
          requester: requester
          address:
          - address
          - address
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          link:
          - null
          - null
          frequency: 1
          requestedAccuracy: 1
      x-etsi-notes: "NOTE 1:\tAs specified in [5], clause 5.2.2.8.\nNOTE 2: \tAs specified\
        \ in [6], clause 5.2.2.7."
      x-etsi-ref: 6.3.3
    OperationStatus:
      type: string
      enum:
      - Serviceable
      - Unserviceable
      - Unknown
    PeriodicNotificationSubscription:
      required:
      - address
      - callbackReference
      - frequency
      - requestedAccuracy
      type: object
      properties:
        address:
          type: array
          description: "Address of terminals to monitor (e.g. \"sip\" URI, \"tel\"\
            \ URI, \"acr\" URI)"
          items:
            type: string
          x-etsi-mec-cardinality: 1..N
          x-etsi-mec-origin-type: anyURI
        callbackReference:
          $ref: '#/components/schemas/CallbackReference'
        clientCorrelator:
          type: string
          description: A correlator that the client can use to tag this particular
            resource representation during a request to create a resource on the server.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        duration:
          type: integer
          description: "Period of time (in seconds) notifications are provided for.\
            \ If set to “0” (zero), a default duration time, which is specified by\
            \ the service policy, will be used. If the parameter is omitted, the notifications\
            \ will continue until the maximum duration time, which is specified by\
            \ the service policy, unless the notifications are stopped by deletion\
            \ of subscription for notifications."
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: int
        frequency:
          type: integer
          description: Maximum frequency (in seconds) of notifications (can also be
            considered minimum time between notifications) per subscription.
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: int
        link:
          type: array
          description: Link to other resources that are in relationship with the resource.
          items:
            $ref: '#/components/schemas/Link'
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: Link
        requestedAccuracy:
          type: integer
          description: Accuracy of the provided distance in meters.
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: int
        requester:
          type: string
          description: "Identifies the entity that is requesting the information (e.g.\
            \ \"sip\" URI, \"tel\" URI, \"acr\" URI)"
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: anyURI
        resourceURL:
          type: string
          description: Self referring URL
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: anyURI
      description: A type containing data for periodic subscription.
      example:
        duration: 1
        requester: requester
        address:
        - address
        - address
        resourceURL: resourceURL
        callbackReference: null
        clientCorrelator: clientCorrelator
        link:
        - null
        - null
        frequency: 1
        requestedAccuracy: 1
    ProblemDetails:
      type: object
      properties:
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of
            the problem
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of
            the problem
          format: uri
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: URI
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem
          format: uint32
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Uint32
        title:
          type: string
          description: "A short, human-readable summary of the problem type"
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 that identifies
            the problem type
          format: uri
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: URI
    RetrievalStatus:
      type: string
      enum:
      - Retrieved
      - NotRetrieved
      - Error
    ServiceError:
      required:
      - messageId
      - text
      type: object
      properties:
        messageId:
          type: string
          description: "Message identifier, either with prefix SVC or with prefix\
            \ POL"
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: string
        text:
          type: string
          description: "Message text, with replacement variables marked with %n, where\
            \ n is an index into the list of <variables> elements, starting at 1"
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: string
        variables:
          type: array
          description: Variables to substitute into text string
          items:
            type: string
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: string
      description: used to indicate a notification termination or cancellation.
    SubscriptionNotification:
      required:
      - terminalLocation
      type: object
      properties:
        callbackData:
          type: string
          description: CallbackData if passed by the application in the receiptRequest
            element during the associated subscription operation
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        distanceCriteria:
          $ref: '#/components/schemas/DistanceCriteria'
        enteringLeavingCriteria:
          $ref: '#/components/schemas/EnteringLeavingCriteria'
        isFinalNotification:
          type: boolean
          description: Set to true if it is a final notification about location change.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: boolean
        link:
          type: array
          description: Link to other resources that are in relationship with the resource.
          items:
            $ref: '#/components/schemas/Link'
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: Link
        terminalLocation:
          type: array
          description: Collection of the terminal locations.
          items:
            $ref: '#/components/schemas/TerminalLocation'
          x-etsi-mec-cardinality: 1..N
          x-etsi-mec-origin-type: TerminalLocation
      description: A type containing the notification subscription.
    TerminalDistance:
      required:
      - distance
      type: object
      properties:
        accuracy:
          type: integer
          description: Accuracy of the provided distance in meters
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: integer
        distance:
          type: integer
          description: Distance from terminal to a location or between two terminals
            specified in meters
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: integer
        timestamp:
          $ref: '#/components/schemas/TimeStamp'
      description: "A type containing information about the distance from a terminal\
        \ to a location or between two terminals, in addition the accuracy and a timestamp\
        \ of the information are provided."
      example:
        distance: 6
        accuracy: 0
        timestamp:
          seconds: 5
          nanoSeconds: 1
    TerminalLocation:
      required:
      - address
      - locationRetrievalStatus
      type: object
      properties:
        address:
          type: string
          description: "Address of the terminal to which the location information\
            \ applies (e.g., 'sip' URI, 'tel' URI, 'acr' URI)."
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: anyURI
        currentLocation:
          $ref: '#/components/schemas/LocationInfo'
        errorInformation:
          $ref: '#/components/schemas/ServiceError'
        locationRetrievalStatus:
          $ref: '#/components/schemas/RetrievalStatus'
      description: "A type containing device address, retrieval status and location\
        \ information."
    TimeStamp:
      required:
      - nanoSeconds
      - seconds
      type: object
      properties:
        nanoSeconds:
          type: integer
          description: "The nanoseconds part of the time. Time is defined as Unix-time\
            \ since January 1, 1970, 00:00:00 UTC."
          format: uint32
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Uint32
        seconds:
          type: integer
          description: "The seconds part of the time. Time is defined as Unix-time\
            \ since January 1, 1970, 00:00:00 UTC."
          format: uint32
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Uint32
      example:
        seconds: 5
        nanoSeconds: 1
      x-etsi-ref: 6.5.2
    UserEventType:
      type: string
      enum:
      - Entering
      - Leaving
      - Transferring
    UserInfo:
      required:
      - accessPointId
      - address
      - resourceURL
      - timestamp
      - zoneId
      type: object
      properties:
        accessPointId:
          type: string
          description: "The identity of the access point the user is currently on,\
            \ see note 1."
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        address:
          type: string
          description: "Address of user (e.g. 'sip' URI, 'tel' URI, 'acr' URI) currently\
            \ on the access point, see note 1."
          format: uri
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: AnyURI
        ancillaryInfo:
          type: string
          description: Reserved for future use.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        contextLocationInfo:
          type: string
          description: "Contextual information of a user location (e.g. aisle, floor,\
            \ room number, etc.)."
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        locationInfo:
          $ref: '#/components/schemas/LocationInfo'
        resourceURL:
          type: string
          description: "Self-referring URL, see note 1."
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: AnyURI
        timestamp:
          $ref: '#/components/schemas/TimeStamp'
        zoneId:
          type: string
          description: "The identity of the zone the user is currently within, see\
            \ note 1."
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
      example:
        locationInfo:
          altitude: 5.962134
          orientationMajorAxis: 4
          shape: 7
          confidence: 5
          latitude:
          - 9.301444
          - 9.301444
          offsetAngle: 2
          accuracy: 0
          includedAngle: 2
          velocity:
            verticalUncertainty: 4
            horizontalSpeed: 1
            bearing: 1
            uncertainty: 6
            verticalSpeed: 1
            velocityType: 7
          accuracySemiMinor: 1
          innerRadius: 7
          accuracyAltitude: 6
          uncertaintyRadius: 1
          longitude:
          - 3.6160767
          - 3.6160767
          timestamp:
            seconds: 5
            nanoSeconds: 1
        address: http://example.com/aeiou
        resourceURL: resourceURL
        accessPointId: accessPointId
        zoneId: zoneId
        ancillaryInfo: ancillaryInfo
        contextLocationInfo: contextLocationInfo
        timestamp: null
      x-etsi-notes: "NOTE 1:\tAs specified in [5], clause 5.2.2.7.\nNOTE 2: \tAs specified\
        \ in [5], clause 5.2.2.5."
      x-etsi-ref: 6.2.2
    UserList:
      required:
      - resourceURL
      type: object
      properties:
        resourceURL:
          type: string
          description: Self referring URL
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: anyURI
        user:
          type: array
          description: Collection of the zone information list.
          items:
            $ref: '#/components/schemas/UserInfo'
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: UserInfo
      description: A type containing list of users.
      example:
        resourceURL: resourceURL
        user:
        - locationInfo:
            altitude: 5.962134
            orientationMajorAxis: 4
            shape: 7
            confidence: 5
            latitude:
            - 9.301444
            - 9.301444
            offsetAngle: 2
            accuracy: 0
            includedAngle: 2
            velocity:
              verticalUncertainty: 4
              horizontalSpeed: 1
              bearing: 1
              uncertainty: 6
              verticalSpeed: 1
              velocityType: 7
            accuracySemiMinor: 1
            innerRadius: 7
            accuracyAltitude: 6
            uncertaintyRadius: 1
            longitude:
            - 3.6160767
            - 3.6160767
            timestamp:
              seconds: 5
              nanoSeconds: 1
          address: http://example.com/aeiou
          resourceURL: resourceURL
          accessPointId: accessPointId
          zoneId: zoneId
          ancillaryInfo: ancillaryInfo
          contextLocationInfo: contextLocationInfo
          timestamp: null
        - locationInfo:
            altitude: 5.962134
            orientationMajorAxis: 4
            shape: 7
            confidence: 5
            latitude:
            - 9.301444
            - 9.301444
            offsetAngle: 2
            accuracy: 0
            includedAngle: 2
            velocity:
              verticalUncertainty: 4
              horizontalSpeed: 1
              bearing: 1
              uncertainty: 6
              verticalSpeed: 1
              velocityType: 7
            accuracySemiMinor: 1
            innerRadius: 7
            accuracyAltitude: 6
            uncertaintyRadius: 1
            longitude:
            - 3.6160767
            - 3.6160767
            timestamp:
              seconds: 5
              nanoSeconds: 1
          address: http://example.com/aeiou
          resourceURL: resourceURL
          accessPointId: accessPointId
          zoneId: zoneId
          ancillaryInfo: ancillaryInfo
          contextLocationInfo: contextLocationInfo
          timestamp: null
    UserTrackingSubscription:
      required:
      - address
      - callbackReference
      type: object
      properties:
        address:
          type: string
          description: "Address of user (e.g. \"sip\" URI, \"tel\" URI, \"acr\" URI)\
            \ to monitor"
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: anyURI
        callbackReference:
          $ref: '#/components/schemas/CallbackReference'
        clientCorrelator:
          type: string
          description: A correlator that the client can use to tag this particular
            resource representation during a request to create a resource on the server.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        resourceURL:
          type: string
          description: Self referring URL
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: anyURI
        userEventCriteria:
          type: array
          description: "List of user event values to generate notifications for (these\
            \ apply to address specified). If this element is missing, a notification\
            \ is requested to be generated for any change in user event."
          items:
            $ref: '#/components/schemas/UserEventType'
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: UserEventType
      description: A type containing user tracking subscription.
      example:
        address: address
        resourceURL: resourceURL
        callbackReference: null
        clientCorrelator: clientCorrelator
        userEventCriteria:
        - Entering
        - Entering
    ZonalPresenceNotification:
      required:
      - address
      - currentAccessPointId
      - timestamp
      - userEventType
      - zoneId
      type: object
      properties:
        address:
          type: string
          description: "Address of user (e.g. \"sip\" URI, \"tel\" URI, \"acr\" URI)\
            \ to monitor"
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: anyURI
        callbackData:
          type: string
          description: "CallBackData if passed by the application during the associated\
            \ ZonalTrafficSubscription and UserTrackingSubscription operation. See\
            \ [REST_NetAPI_Common]."
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        currentAccessPointId:
          type: string
          description: Identifier of access point.
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: string
        interestRealm:
          type: string
          description: "Interest realm of access point (e.g. geographical area, a\
            \ type of industry etc.)."
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        link:
          type: array
          description: Link to other resources that are in relationship with this
            notification. The server SHOULD include a link to the related subscription.
            No other links are required or suggested by this specification
          items:
            $ref: '#/components/schemas/Link'
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: Link
        previousAccessPointId:
          type: string
          description: Identifier of access point.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        timestamp:
          $ref: '#/components/schemas/TimeStamp'
        userEventType:
          $ref: '#/components/schemas/UserEventType'
        zoneId:
          type: string
          description: Identifier of zone
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: string
      description: A type containing zonal presence notification
    ZonalTrafficSubscription:
      required:
      - callbackReference
      - zoneId
      type: object
      properties:
        callbackReference:
          $ref: '#/components/schemas/CallbackReference'
        clientCorrelator:
          type: string
          description: A correlator that the client can use to tag this particular
            resource representation during a request to create a resource on the server.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        duration:
          type: integer
          description: "Period (in seconds) of time notifications are provided for.\
            \ If set to \"0\" (zero), a default duration time, which is specified\
            \ by the service policy, will be used. If the parameter is omitted, the\
            \ notifications will continue until the maximum duration time, which is\
            \ specified by the service policy, unless the notifications are stopped\
            \ by deletion of subscription for notifications. This element MAY be given\
            \ by the client during resource creation in order to signal the desired\
            \ lifetime of the subscription. The server MUST return in this element\
            \ the   period of time for which the subscription will still be valid."
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: unsignedInt
        interestRealm:
          type: array
          description: "Interest realm of access point (e.g. geographical area, a\
            \ type of industry etc.)."
          items:
            type: string
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: string
        resourceURL:
          type: string
          description: Self referring URL
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: anyURI
        userEventCriteria:
          type: array
          description: "List of user event values to generate notifications for (these\
            \ apply to zone identifier or all interest realms within zone identifier\
            \ specified). If this element is missing, a notification is requested\
            \ to be generated for any change in user event."
          items:
            $ref: '#/components/schemas/UserEventType'
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: UserEventType
        zoneId:
          type: string
          description: Identifier of zone
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: string
      description: A type containing zonal traffic subscription
      example:
        duration: 6
        resourceURL: resourceURL
        callbackReference: null
        clientCorrelator: clientCorrelator
        zoneId: zoneId
        interestRealm:
        - interestRealm
        - interestRealm
        userEventCriteria:
        - null
        - null
    ZoneInfo:
      required:
      - numberOfAccessPoints
      - numberOfUnserviceableAccessPoints
      - numberOfUsers
      - resourceURL
      - zoneId
      type: object
      properties:
        numberOfAccessPoints:
          type: integer
          description: The number of access points within the zone
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: unsignedInt
        numberOfUnserviceableAccessPoints:
          type: integer
          description: Number of inoperable access points within the zone.
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: unsignedInt
        numberOfUsers:
          type: integer
          description: The number of users currently on the access point.
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: unsignedInt
        resourceURL:
          type: string
          description: Self referring URL
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: anyURI
        zoneId:
          type: string
          description: Identifier of zone
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: string
      description: A type containing zone information.
      example:
        resourceURL: resourceURL
        numberOfUsers: 1
        zoneId: zoneId
        numberOfAccessPoints: 0
        numberOfUnserviceableAccessPoints: 6
    ZoneList:
      required:
      - resourceURL
      type: object
      properties:
        resourceURL:
          type: string
          description: Self referring URL
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: anyURI
        zone:
          type: array
          description: Collection of the zone information list.
          items:
            $ref: '#/components/schemas/ZoneInfo'
      description: A type containing a list of zones.
      example:
        resourceURL: resourceURL
        zone:
        - resourceURL: resourceURL
          numberOfUsers: 1
          zoneId: zoneId
          numberOfAccessPoints: 0
          numberOfUnserviceableAccessPoints: 6
        - resourceURL: resourceURL
          numberOfUsers: 1
          zoneId: zoneId
          numberOfAccessPoints: 0
          numberOfUnserviceableAccessPoints: 6
    ZoneStatusNotification:
      required:
      - timestamp
      - zoneId
      type: object
      properties:
        accessPointId:
          type: string
          description: Identifier of an access point.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        callbackData:
          type: string
          description: "CallBackData if passed by the application during the associated\
            \ ZoneStatusSubscription operation. See [REST_NetAPI_Common]."
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        link:
          type: array
          description: Link to other resources that are in relationship with this
            notification. The server SHOULD include a link to the related subscription.
            No other links are required or suggested by this specification
          items:
            $ref: '#/components/schemas/Link'
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: Link
        numberOfUsersInAP:
          type: integer
          description: This element shall be present when ZoneStatusSubscription includes
            numberOfUsersAPThreshold element and the number of users in an access
            point exceeds the threshold defined in the subscription.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: unsignedInt
        numberOfUsersInZone:
          type: integer
          description: This element shall be present when ZoneStatusSubscription includes
            numberOfUsersZoneThreshold element and the number of users in a zone exceeds
            the threshold defined in this subscription.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: unsignedInt
        operationStatus:
          $ref: '#/components/schemas/OperationStatus'
        timestamp:
          $ref: '#/components/schemas/TimeStamp'
        zoneId:
          type: string
          description: Identifier of zone
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: string
      description: A type containing zone status notification.
    ZoneStatusSubscription:
      required:
      - callbackReference
      - zoneId
      type: object
      properties:
        callbackReference:
          $ref: '#/components/schemas/CallbackReference'
        clientCorrelator:
          type: string
          description: A correlator that the client can use to tag this particular
            resource representation during a request to create a resource on the server.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        numberOfUsersAPThreshold:
          type: integer
          description: Threshold number of users in an access point which if crossed
            shall cause a notification
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: unsignedInt
        numberOfUsersZoneThreshold:
          type: integer
          description: Threshold number of users in a zone which if crossed shall
            cause a notification
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: unsignedInt
        operationStatus:
          type: array
          description: List of operation status values to generate notifications for
            (these apply to all access points within a zone).
          items:
            $ref: '#/components/schemas/OperationStatus'
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: OperationStatus
        resourceURL:
          type: string
          description: Self referring URL
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: anyURI
        zoneId:
          type: string
          description: Identifier of zone
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: string
      description: A type containing zone status subscription.
      example:
        operationStatus:
        - Serviceable
        - Serviceable
        numberOfUsersAPThreshold: 7
        resourceURL: resourceURL
        callbackReference: null
        clientCorrelator: clientCorrelator
        zoneId: zoneId
        numberOfUsersZoneThreshold: 1
    InlineAccessPointInfo:
      type: object
      properties:
        accessPointInfo:
          $ref: '#/components/schemas/AccessPointInfo'
      example:
        accessPointInfo:
          locationInfo:
            altitude: 5.962134
            orientationMajorAxis: 4
            shape: 7
            confidence: 5
            latitude:
            - 9.301444
            - 9.301444
            offsetAngle: 2
            accuracy: 0
            includedAngle: 2
            velocity:
              verticalUncertainty: 4
              horizontalSpeed: 1
              bearing: 1
              uncertainty: 6
              verticalSpeed: 1
              velocityType: 7
            accuracySemiMinor: 1
            innerRadius: 7
            accuracyAltitude: 6
            uncertaintyRadius: 1
            longitude:
            - 3.6160767
            - 3.6160767
            timestamp:
              seconds: 5
              nanoSeconds: 1
          operationStatus: Serviceable
          resourceURL: resourceURL
          numberOfUsers: 0
          timezone: timezone
          accessPointId: accessPointId
          interestRealm: interestRealm
          connectionType: Femto
    InlineAccessPointList:
      type: object
      properties:
        accessPointList:
          $ref: '#/components/schemas/AccessPointList'
      example:
        accessPointList:
          resourceURL: resourceURL
          zoneId: zoneId
          accessPoint:
          - locationInfo:
              altitude: 5.962134
              orientationMajorAxis: 4
              shape: 7
              confidence: 5
              latitude:
              - 9.301444
              - 9.301444
              offsetAngle: 2
              accuracy: 0
              includedAngle: 2
              velocity:
                verticalUncertainty: 4
                horizontalSpeed: 1
                bearing: 1
                uncertainty: 6
                verticalSpeed: 1
                velocityType: 7
              accuracySemiMinor: 1
              innerRadius: 7
              accuracyAltitude: 6
              uncertaintyRadius: 1
              longitude:
              - 3.6160767
              - 3.6160767
              timestamp:
                seconds: 5
                nanoSeconds: 1
            operationStatus: Serviceable
            resourceURL: resourceURL
            numberOfUsers: 0
            timezone: timezone
            accessPointId: accessPointId
            interestRealm: interestRealm
            connectionType: Femto
          - locationInfo:
              altitude: 5.962134
              orientationMajorAxis: 4
              shape: 7
              confidence: 5
              latitude:
              - 9.301444
              - 9.301444
              offsetAngle: 2
              accuracy: 0
              includedAngle: 2
              velocity:
                verticalUncertainty: 4
                horizontalSpeed: 1
                bearing: 1
                uncertainty: 6
                verticalSpeed: 1
                velocityType: 7
              accuracySemiMinor: 1
              innerRadius: 7
              accuracyAltitude: 6
              uncertaintyRadius: 1
              longitude:
              - 3.6160767
              - 3.6160767
              timestamp:
                seconds: 5
                nanoSeconds: 1
            operationStatus: Serviceable
            resourceURL: resourceURL
            numberOfUsers: 0
            timezone: timezone
            accessPointId: accessPointId
            interestRealm: interestRealm
            connectionType: Femto
    InlineTerminalDistance:
      type: object
      properties:
        terminalDistance:
          $ref: '#/components/schemas/TerminalDistance'
      example:
        terminalDistance:
          distance: 6
          accuracy: 0
          timestamp:
            seconds: 5
            nanoSeconds: 1
    InlineUserList:
      type: object
      properties:
        userList:
          $ref: '#/components/schemas/UserList'
      example:
        userList:
          resourceURL: resourceURL
          user:
          - locationInfo:
              altitude: 5.962134
              orientationMajorAxis: 4
              shape: 7
              confidence: 5
              latitude:
              - 9.301444
              - 9.301444
              offsetAngle: 2
              accuracy: 0
              includedAngle: 2
              velocity:
                verticalUncertainty: 4
                horizontalSpeed: 1
                bearing: 1
                uncertainty: 6
                verticalSpeed: 1
                velocityType: 7
              accuracySemiMinor: 1
              innerRadius: 7
              accuracyAltitude: 6
              uncertaintyRadius: 1
              longitude:
              - 3.6160767
              - 3.6160767
              timestamp:
                seconds: 5
                nanoSeconds: 1
            address: http://example.com/aeiou
            resourceURL: resourceURL
            accessPointId: accessPointId
            zoneId: zoneId
            ancillaryInfo: ancillaryInfo
            contextLocationInfo: contextLocationInfo
            timestamp: null
          - locationInfo:
              altitude: 5.962134
              orientationMajorAxis: 4
              shape: 7
              confidence: 5
              latitude:
              - 9.301444
              - 9.301444
              offsetAngle: 2
              accuracy: 0
              includedAngle: 2
              velocity:
                verticalUncertainty: 4
                horizontalSpeed: 1
                bearing: 1
                uncertainty: 6
                verticalSpeed: 1
                velocityType: 7
              accuracySemiMinor: 1
              innerRadius: 7
              accuracyAltitude: 6
              uncertaintyRadius: 1
              longitude:
              - 3.6160767
              - 3.6160767
              timestamp:
                seconds: 5
                nanoSeconds: 1
            address: http://example.com/aeiou
            resourceURL: resourceURL
            accessPointId: accessPointId
            zoneId: zoneId
            ancillaryInfo: ancillaryInfo
            contextLocationInfo: contextLocationInfo
            timestamp: null
    InlineZoneInfo:
      type: object
      properties:
        zoneInfo:
          $ref: '#/components/schemas/ZoneInfo'
      example:
        zoneInfo:
          resourceURL: resourceURL
          numberOfUsers: 1
          zoneId: zoneId
          numberOfAccessPoints: 0
          numberOfUnserviceableAccessPoints: 6
    InlineZoneList:
      type: object
      properties:
        zoneList:
          $ref: '#/components/schemas/ZoneList'
      example:
        zoneList:
          resourceURL: resourceURL
          zone:
          - resourceURL: resourceURL
            numberOfUsers: 1
            zoneId: zoneId
            numberOfAccessPoints: 0
            numberOfUnserviceableAccessPoints: 6
          - resourceURL: resourceURL
            numberOfUsers: 1
            zoneId: zoneId
            numberOfAccessPoints: 0
            numberOfUnserviceableAccessPoints: 6
    InlineCircleNotificationSubscription:
      type: object
      properties:
        circleNotificationSubscription:
          $ref: '#/components/schemas/CircleNotificationSubscription'
      example:
        circleNotificationSubscription:
          requester: requester
          trackingAccuracy: 7.0614014
          address:
          - address
          - address
          callbackReference:
            notificationFormat: XML
            callbackData: callbackData
            notifyURL: notifyURL
          latitude: 5.962134
          count: 0
          link:
          - rel: rel
            href: href
          - rel: rel
            href: href
          frequency: 1
          duration: 6
          enteringLeavingCriteria: Entering
          resourceURL: resourceURL
          clientCorrelator: clientCorrelator
          checkImmediate: true
          radius: 2.302136
          longitude: 5.637377
    InlineDistanceNotificationSubscription:
      type: object
      properties:
        distanceNotificationSubscription:
          $ref: '#/components/schemas/DistanceNotificationSubscription'
      example:
        distanceNotificationSubscription:
          requester: requester
          trackingAccuracy: 7.386282
          distance: 3.6160767
          callbackReference: null
          criteria: AllWithinDistance
          count: 9
          link:
          - null
          - null
          frequency: 4
          duration: 2
          monitoredAddress:
          - monitoredAddress
          - monitoredAddress
          referenceAddress:
          - referenceAddress
          - referenceAddress
          resourceURL: resourceURL
          clientCorrelator: clientCorrelator
          checkImmediate: true
    InlinePeriodicNotificationSubscription:
      type: object
      properties:
        periodicNotificationSubscription:
          $ref: '#/components/schemas/PeriodicNotificationSubscription'
      example:
        periodicNotificationSubscription:
          duration: 1
          requester: requester
          address:
          - address
          - address
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          link:
          - null
          - null
          frequency: 1
          requestedAccuracy: 1
    InlineUserTrackingSubscription:
      type: object
      properties:
        userTrackingSubscription:
          $ref: '#/components/schemas/UserTrackingSubscription'
      example:
        userTrackingSubscription:
          address: address
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          userEventCriteria:
          - Entering
          - Entering
    InlineZonalTrafficSubscription:
      type: object
      properties:
        zonalTrafficSubscription:
          $ref: '#/components/schemas/ZonalTrafficSubscription'
      example:
        zonalTrafficSubscription:
          duration: 6
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          zoneId: zoneId
          interestRealm:
          - interestRealm
          - interestRealm
          userEventCriteria:
          - null
          - null
    InlineZoneStatusSubscription:
      type: object
      properties:
        zoneStatusSubscription:
          $ref: '#/components/schemas/ZoneStatusSubscription'
      example:
        zoneStatusSubscription:
          operationStatus:
          - Serviceable
          - Serviceable
          numberOfUsersAPThreshold: 7
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          zoneId: zoneId
          numberOfUsersZoneThreshold: 1
    InlineNotificationSubscriptionList:
      required:
      - notificationSubscriptionList
      type: object
      properties:
        notificationSubscriptionList:
          $ref: '#/components/schemas/NotificationSubscriptionList'
      example:
        notificationSubscriptionList:
          distanceNotificationSubscription:
          - requester: requester
            trackingAccuracy: 7.386282
            distance: 3.6160767
            callbackReference: null
            criteria: AllWithinDistance
            count: 9
            link:
            - null
            - null
            frequency: 4
            duration: 2
            monitoredAddress:
            - monitoredAddress
            - monitoredAddress
            referenceAddress:
            - referenceAddress
            - referenceAddress
            resourceURL: resourceURL
            clientCorrelator: clientCorrelator
            checkImmediate: true
          - requester: requester
            trackingAccuracy: 7.386282
            distance: 3.6160767
            callbackReference: null
            criteria: AllWithinDistance
            count: 9
            link:
            - null
            - null
            frequency: 4
            duration: 2
            monitoredAddress:
            - monitoredAddress
            - monitoredAddress
            referenceAddress:
            - referenceAddress
            - referenceAddress
            resourceURL: resourceURL
            clientCorrelator: clientCorrelator
            checkImmediate: true
          circleNotificationSubscription:
          - requester: requester
            trackingAccuracy: 7.0614014
            address:
            - address
            - address
            callbackReference:
              notificationFormat: XML
              callbackData: callbackData
              notifyURL: notifyURL
            latitude: 5.962134
            count: 0
            link:
            - rel: rel
              href: href
            - rel: rel
              href: href
            frequency: 1
            duration: 6
            enteringLeavingCriteria: Entering
            resourceURL: resourceURL
            clientCorrelator: clientCorrelator
            checkImmediate: true
            radius: 2.302136
            longitude: 5.637377
          - requester: requester
            trackingAccuracy: 7.0614014
            address:
            - address
            - address
            callbackReference:
              notificationFormat: XML
              callbackData: callbackData
              notifyURL: notifyURL
            latitude: 5.962134
            count: 0
            link:
            - rel: rel
              href: href
            - rel: rel
              href: href
            frequency: 1
            duration: 6
            enteringLeavingCriteria: Entering
            resourceURL: resourceURL
            clientCorrelator: clientCorrelator
            checkImmediate: true
            radius: 2.302136
            longitude: 5.637377
          resourceURL: http://example.com/aeiou
          userTrackingSubscription:
          - address: address
            resourceURL: resourceURL
            callbackReference: null
            clientCorrelator: clientCorrelator
            userEventCriteria:
            - Entering
            - Entering
          - address: address
            resourceURL: resourceURL
            callbackReference: null
            clientCorrelator: clientCorrelator
            userEventCriteria:
            - Entering
            - Entering
          zonalTrafficSubscription:
          - duration: 6
            resourceURL: resourceURL
            callbackReference: null
            clientCorrelator: clientCorrelator
            zoneId: zoneId
            interestRealm:
            - interestRealm
            - interestRealm
            userEventCriteria:
            - null
            - null
          - duration: 6
            resourceURL: resourceURL
            callbackReference: null
            clientCorrelator: clientCorrelator
            zoneId: zoneId
            interestRealm:
            - interestRealm
            - interestRealm
            userEventCriteria:
            - null
            - null
          zoneStatusSubscription:
          - operationStatus:
            - Serviceable
            - Serviceable
            numberOfUsersAPThreshold: 7
            resourceURL: resourceURL
            callbackReference: null
            clientCorrelator: clientCorrelator
            zoneId: zoneId
            numberOfUsersZoneThreshold: 1
          - operationStatus:
            - Serviceable
            - Serviceable
            numberOfUsersAPThreshold: 7
            resourceURL: resourceURL
            callbackReference: null
            clientCorrelator: clientCorrelator
            zoneId: zoneId
            numberOfUsersZoneThreshold: 1
          periodicNotificationSubscription:
          - duration: 1
            requester: requester
            address:
            - address
            - address
            resourceURL: resourceURL
            callbackReference: null
            clientCorrelator: clientCorrelator
            link:
            - null
            - null
            frequency: 1
            requestedAccuracy: 1
          - duration: 1
            requester: requester
            address:
            - address
            - address
            resourceURL: resourceURL
            callbackReference: null
            clientCorrelator: clientCorrelator
            link:
            - null
            - null
            frequency: 1
            requestedAccuracy: 1
    InlineSubscriptionNotification:
      type: object
      properties:
        subscriptionNotification:
          $ref: '#/components/schemas/SubscriptionNotification'
    InlineZonalPresenceNotification:
      type: object
      properties:
        zonalPresenceNotification:
          $ref: '#/components/schemas/ZonalPresenceNotification'
    InlineZoneStatusNotification:
      type: object
      properties:
        zoneStatusNotification:
          $ref: '#/components/schemas/ZoneStatusNotification'
    InlineProblemDetails:
      type: object
      properties:
        problemDetails:
          $ref: '#/components/schemas/ProblemDetails'
    InlineProblemDetailsRequired:
      required:
      - problemDetails
      type: object
      properties:
        problemDetails:
          $ref: '#/components/schemas/ProblemDetails'
    AppTerminationNotification:
      required:
      - _links
      - maxGracefulTimeout
      - notificationType
      - operationAction
      type: object
      properties:
        notificationType:
          type: string
          description: Shall be set to AppTerminationNotification.
        operationAction:
          $ref: '#/components/schemas/OperationActionType'
        maxGracefulTimeout:
          type: integer
          description: Maximum timeout value in seconds for graceful termination or
            graceful stop of an application instance.
          format: uint32
        _links:
          $ref: '#/components/schemas/AppTerminationNotification__links'
      description: This type represents the information that the MEC platform notifies
        the subscribed application instance about  the corresponding application instance
        termination/stop.
    OperationActionType:
      type: string
      description: Operation that is being performed on the MEC application instance.
      enum:
      - STOPPING
      - TERMINATING
    LinkType:
      required:
      - href
      type: object
      properties:
        href:
          type: string
          description: URI referring to a resource
          format: uri
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: URI
    LocationInfo_velocity:
      required:
      - bearing
      - horizontalSpeed
      - velocityType
      type: object
      properties:
        bearing:
          type: integer
          description: "Bearing, expressed in the range 0° to 360°, as defined in\
            \ ETSI TS 123 032 [14]."
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: UnsignedInt
        horizontalSpeed:
          type: integer
          description: "Horizontal speed, expressed in km/h and defined in ETSI TS\
            \ 123 032 [14]."
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: UnsignedInt
        uncertainty:
          type: integer
          description: "Horizontal uncertainty, as defined in ETSI TS 123 032 [14].\
            \ Present only if \"velocityType\" equals 3 or 4"
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        velocityType:
          type: integer
          description: "Velocity information, as detailed in ETSI TS 123 032 [14],\
            \ associated with the reported location coordinate: <p>1 = HORIZONTAL\
            \ <p>2 = HORIZONTAL_VERTICAL <p>3 = HORIZONTAL_UNCERT <p>4 = HORIZONTAL_VERTICAL_UNCERT"
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Enum_inlined
        verticalSpeed:
          type: integer
          description: "Vertical speed, expressed in km/h and defined in ETSI TS 123\
            \ 032 [14]. Present only if \"velocityType\" equals 2 or 4"
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Int
        verticalUncertainty:
          type: integer
          description: "Vertical uncertainty, as defined in ETSI TS 123 032 [14].\
            \ Present only if \"velocityType\" equals 4"
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
      description: "Structure with attributes relating to the target entity’s velocity,\
        \ as defined in ETSI TS 123 032 [14]."
      example:
        verticalUncertainty: 4
        horizontalSpeed: 1
        bearing: 1
        uncertainty: 6
        verticalSpeed: 1
        velocityType: 7
    AppTerminationNotification__links:
      required:
      - subscription
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/LinkType'
        confirmTermination:
          $ref: '#/components/schemas/LinkType'
      description: Object containing hyperlinks related to the resource.
  responses:
    "200":
      description: OK
    "204":
      description: No Content
    "400":
      description: "Bad Request : used to indicate that incorrect parameters were\
        \ passed to the request."
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "401":
      description: "Unauthorized :  used when the client did not submit credentials."
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "403":
      description: "Forbidden :  operation is not allowed given the current status\
        \ of the resource."
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "404":
      description: "Not Found :  used when a client provided a URI that cannot be\
        \ mapped to a valid resource URI."
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "406":
      description: "Not Acceptable : used to indicate that the server cannot provide\
        \ the any of the content formats supported by the client."
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "412":
      description: "Precondition failed :  used when a condition has failed during\
        \ conditional requests, e.g. when using ETags to avoid write conflicts when\
        \ using PUT"
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "414":
      description: "URI Too Long : used to indicate that the server is refusing to\
        \ process the request because the request URI is longer than the server is\
        \ willing or able to process."
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "415":
      description: "Unsupported Media Type :  used to indicate that the server or\
        \ the client does not support the content type of the entity body."
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "422":
      description: "Unprocessable Entity : used to indicate that the server understands\
        \ the content type of the request entity and that the syntax of the request\
        \ entity is correct but that the server is unable to process the contained\
        \ instructions. This error condition can occur if an JSON request body is\
        \ syntactically correct but semantically incorrect, for example if the target\
        \ area for the request is considered too large. This error condition can also\
        \ occur if the capabilities required by the request are not supported."
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "429":
      description: "Too Many Requests : used when a rate limiter has triggered."
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
  parameters:
    Path.AccessPointId:
      name: accessPointId
      in: path
      description: Identifier of access Point
      required: true
      style: simple
      explode: false
      schema:
        type: string
      x-exportParamName: AccessPointId
    Path.SubscrId:
      name: subscriptionId
      in: path
      description: "Subscription Identifier, specifically the \"self\" returned in\
        \ the subscription request"
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uri
      x-exportParamName: SubscriptionId
    Path.ZoneId:
      name: zoneId
      in: path
      description: Indentifier of zone
      required: true
      style: simple
      explode: false
      schema:
        type: string
      x-exportParamName: ZoneId
    Query.AccessPointId:
      name: accessPointId
      in: query
      description: Identifier of access point
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
      x-exportParamName: AccessPointId
    Query.Address:
      name: address
      in: query
      description: "address of users (e.g. \"sip\" URI, \"tel\" URI, \"acr\" URI)"
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
      x-exportParamName: Address
    Query.AddressMandatory:
      name: address
      in: query
      description: "address of users (e.g. \"sip\" URI, \"tel\" URI, \"acr\" URI)"
      required: true
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
      x-exportParamName: AddressMandatory
    Query.InterestRealm:
      name: interestRealm
      in: query
      description: "Interest realm of access point (e.g. geographical area, a type\
        \ of industry etc.)."
      required: false
      style: form
      explode: true
      schema:
        type: string
      x-exportParamName: InterestRealm
    Query.Latitude:
      name: latitude
      in: query
      description: Latitude geo position
      required: false
      style: form
      explode: true
      schema:
        type: number
        format: float
      x-exportParamName: Latitude
    Query.Longitude:
      name: longitude
      in: query
      description: Longitude geo position
      required: false
      style: form
      explode: true
      schema:
        type: number
        format: float
      x-exportParamName: Longitude
    Query.Requester:
      name: requester
      in: query
      description: Entity that is requesting the information
      required: false
      style: form
      explode: true
      schema:
        type: string
      x-exportParamName: Requester
    Query.ZoneId:
      name: zoneId
      in: query
      description: Identifier of zone
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
      x-exportParamName: ZoneId
