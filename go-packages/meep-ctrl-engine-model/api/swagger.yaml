swagger: '2.0'
info:
  version: 1.0.0
  title: MEEP Model
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
definitions:
  ActivationInfo:
    type: object
    properties:
      replayFileName:
        type: string
        description: Replay-file name to execute at deployment time
    description: Activation information
    example: {}
  NodeServiceMaps:
    type: object
    properties:
      node:
        type: string
        description: Unique external node identifier
      ingressServiceMap:
        type: array
        items:
          $ref: '#/definitions/IngressService'
      egressServiceMap:
        type: array
        items:
          $ref: '#/definitions/EgressService'
    description: Node-specific mapping of exposed internal & external services
    example: {}
  Deployment:
    type: object
    properties:
      interDomainLatency:
        type: integer
        description: Latency in ms between domains
      interDomainLatencyVariation:
        type: integer
        description: Latency variation in ms between domains
      interDomainThroughput:
        type: integer
        description: The limit of the traffic supported between domains
      interDomainPacketLoss:
        type: number
        format: double
        description: Packet lost (in terms of percentage) between domains
      meta:
        type: object
        description: 'Key/Value Pair Map (string, string)'
        additionalProperties:
          type: string
      userMeta:
        type: object
        description: 'Key/Value Pair Map (string, string)'
        additionalProperties:
          type: string
      domains:
        type: array
        items:
          $ref: '#/definitions/Domain'
    description: Network deployment object
    example: {}
  Domain:
    type: object
    properties:
      id:
        type: string
        description: Unique domain ID
      name:
        type: string
        description: Domain name
      type:
        type: string
        description: Domain type
        enum:
          - OPERATOR
          - PUBLIC
      interZoneLatency:
        type: integer
        description: Latency in ms between zones within domain
      interZoneLatencyVariation:
        type: integer
        description: Latency variation in ms between zones within domain
      interZoneThroughput:
        type: integer
        description: The limit of the traffic supported between zones within the domain
      interZonePacketLoss:
        type: number
        format: double
        description: Packet lost (in terms of percentage) between zones within the domain
      meta:
        type: object
        description: 'Key/Value Pair Map (string, string)'
        additionalProperties:
          type: string
      userMeta:
        type: object
        description: 'Key/Value Pair Map (string, string)'
        additionalProperties:
          type: string
      zones:
        type: array
        items:
          $ref: '#/definitions/Zone'
    description: Operator domain object
    example: {}
  EgressService:
    type: object
    properties:
      name:
        type: string
        description: Service name
      meSvcName:
        type: string
        description: 'Multi-Edge service name, if any'
      ip:
        type: string
        description: External node IP address
      port:
        type: integer
        description: Service port number
      protocol:
        type: string
        description: Service protocol (TCP or UDP)
    description: External service exposed internally via specific port
  Event:
    type: object
    properties:
      name:
        type: string
        description: Event name
      type:
        type: string
        description: Event type
        enum:
          - NETWORK-CHARACTERISTICS-UPDATE
          - MOBILITY
          - POAS-IN-RANGE
          - OTHER
      eventNetworkCharacteristicsUpdate:
        $ref: '#/definitions/EventNetworkCharacteristicsUpdate'
      eventMobility:
        $ref: '#/definitions/EventMobility'
      eventPoasInRange:
        $ref: '#/definitions/EventPoasInRange'
      eventOther:
        $ref: '#/definitions/EventOther'
    description: Event object
    example:
      name: name
      type: MOBILITY
      eventMobility:
        elementName: ue1
        dest: poa2
  EventList:
    type: object
    properties:
      events:
        type: array
        items:
          $ref: '#/definitions/Event'
    description: Event list object
    example: {}
  EventNetworkCharacteristicsUpdate:
    type: object
    properties:
      elementName:
        type: string
        description: Name of the network element to be updated
      elementType:
        type: string
        description: Type of the network element to be updated
        enum:
          - SCENARIO
          - OPERATOR
          - ZONE
          - POA
          - EDGE
          - FOG
          - UE
          - DISTANT-CLOUD
          - UE-APP
          - EDGE-APP
          - CLOUD-APP
      latency:
        type: integer
        description: Latency in ms
      latencyVariation:
        type: integer
        description: Latency variation in ms
      throughput:
        type: integer
        description: Throughput limit
      packetLoss:
        type: number
        format: double
        description: Packet loss percentage
    description: Network Characteristics update Event object
    example: {}
  EventPoasInRange:
    type: object
    properties:
      ue:
        type: string
        description: UE identifier
      poasInRange:
        type: array
        items:
          type: string
          description: POAs visible to UE
    description: POAs In Range Event object
    example:
      ue: ue
      poasInRange:
        - poa1
        - poa2
  EventMobility:
    type: object
    properties:
      elementName:
        type: string
        description: Name of the network element to be updated
      dest:
        type: string
        description: Destination element identifier
    description: Mobility Event object
    example:
      elementName: ue1
      dest: poa2
  EventOther:
    type: object
    properties:
      event:
        type: string
        description: Other event string
    description: Other Event object
    example:
      event: event
  ExternalConfig:
    type: object
    properties:
      ingressServiceMap:
        type: array
        items:
          $ref: '#/definitions/IngressService'
      egressServiceMap:
        type: array
        items:
          $ref: '#/definitions/EgressService'
    description: |-
      External Process configuration.
      NOTE: Only valid if 'isExternal' is set.
    example: {}
  GpuConfig:
    type: object
    properties:
      type:
        type: string
        description: Requested GPU type
      count:
        type: integer
        description: Number of GPUs requested
    description: GPU configuration object
  IngressService:
    type: object
    properties:
      name:
        type: string
        description: Service name (unique or multi-edge)
      port:
        type: integer
        description: Internal service port number
      externalPort:
        type: integer
        description: Externally-exposed unique service port in range (30000 - 32767)
      protocol:
        type: string
        description: Service protocol (TCP or UDP)
    description: Internal service exposed externally via specific port
  NetworkCharacteristics:
    type: object
    properties:
      latency:
        type: integer
        description: Latency in ms
      latencyVariation:
        type: integer
        description: Latency variation in ms
      throughput:
        type: integer
        description: Throughput limit in Mbps
      packetLoss:
        type: number
        format: double
        description: Packet loss percentage
    description: Network characteristics object
    example: {}
  NetworkLocation:
    type: object
    properties:
      id:
        type: string
        description: Unique network location ID
      name:
        type: string
        description: Network location name
      type:
        type: string
        description: Network location type
        enum:
          - POA
          - DEFAULT
      terminalLinkLatency:
        type: integer
        description: Latency in ms for all terminal links within network location
      terminalLinkLatencyVariation:
        type: integer
        description: Latency variation in ms for all terminal links within network location
      terminalLinkThroughput:
        type: integer
        description: >-
          The limit of the traffic supported for all terminal links within the
          network location
      terminalLinkPacketLoss:
        type: number
        format: double
        description: >-
          Packet lost (in terms of percentage) for all terminal links within the
          network location
      meta:
        type: object
        description: 'Key/Value Pair Map (string, string)'
        additionalProperties:
          type: string
      userMeta:
        type: object
        description: 'Key/Value Pair Map (string, string)'
        additionalProperties:
          type: string
      physicalLocations:
        type: array
        items:
          $ref: '#/definitions/PhysicalLocation'
    description: Logical network location object
    example: {}
  PhysicalLocation:
    type: object
    properties:
      id:
        type: string
        description: Unique physical location ID
      name:
        type: string
        description: Physical location name
      type:
        type: string
        description: Physical location type
        enum:
          - UE
          - FOG
          - EDGE
          - CN
          - DC
      isExternal:
        type: boolean
        description: |-
          true: Physical location is external to MEEP
          false: Physical location is internal to MEEP
      networkLocationsInRange:
        type: array
        items:
          type: string
          description: Names of network locations within range of physical location
      meta:
        type: object
        description: 'Key/Value Pair Map (string, string)'
        additionalProperties:
          type: string
      userMeta:
        type: object
        description: 'Key/Value Pair Map (string, string)'
        additionalProperties:
          type: string
      processes:
        type: array
        items:
          $ref: '#/definitions/Process'
      linkLatency:
        type: integer
        description: >-
          Latency in ms between the physical location and the network (wired
          interface, air interface)
      linkLatencyVariation:
        type: integer
        description: >-
          Latency variation in ms between the physical location and the network
          (wired interface, air interface)
      linkThroughput:
        type: integer
        description: >-
          The limit of the traffic supported between the physical location and
          the network (wired interface, air interface)
      linkPacketLoss:
        type: number
        format: double
        description: >-
          Packet lost (in terms of percentage) between the physical location and
          the network (wired interface, air interface)
    description: Physical location object
    example: {}
  PodStatus:
    type: object
    properties:
      name:
        type: string
        description: Pod name
      namespace:
        type: string
        description: Pod namespace
      meepApp:
        type: string
        description: Pod process name
      meepOrigin:
        type: string
        description: 'Pod origin(core, scenario)'
      meepScenario:
        type: string
        description: Pod scenario name
      phase:
        type: string
        description: Pod phase
      podInitialized:
        type: string
        description: Pod initialized (true/false)
      podReady:
        type: string
        description: Pod ready (true/false)
      podScheduled:
        type: string
        description: Pod scheduled (true/false)
      podUnschedulable:
        type: string
        description: Pod unschedulable (true/false)
      podConditionError:
        type: string
        description: Pod error message
      containerStatusesMsg:
        type: string
        description: Failed container error message
      nbOkContainers:
        type: string
        description: Number of containers that are up
      nbTotalContainers:
        type: string
        description: Number of total containers in the pod
      nbPodRestart:
        type: string
        description: Number of container failures leading to pod restarts
      logicalState:
        type: string
        description: State that is mapping the kubernetes api state
      startTime:
        type: string
        description: Pod creation time
    example:
      podStatus:
        - podName: mypod
          namespace: default
          meepApp: pod1
          meepOrigin: scenario
          meepScenario: myScenario
          phase: Running
          podInitialized: 'True'
          podReady: 'False'
          podScheduled: 'True'
          podUnschedulable: 'False'
          podConditionError: 'containers with unready status: [myshel]'
          containerStatusesMsg: null
          nbOkContainers: '0'
          nbTotalContainers: '1'
          nbPodRestart: '15005'
          startTime: '2018-09-10 14:24:00 +0000 UTC'
  PodsStatus:
    type: object
    properties:
      podStatus:
        type: array
        items:
          $ref: '#/definitions/PodStatus'
    description: List of all pods status
    example: {}
  Process:
    type: object
    properties:
      id:
        type: string
        description: Unique process ID
      name:
        type: string
        description: Process name
      type:
        type: string
        description: Process type
        enum:
          - UE-APP
          - EDGE-APP
          - MEC-SVC
          - CLOUD-APP
      isExternal:
        type: boolean
        description: |-
          true: process is external to MEEP
          false: process is internal to MEEP
      image:
        type: string
        description: Docker image to deploy inside MEEP
      environment:
        type: string
        description: >-
          Environment variables using the format
          NAME="value",NAME="value",NAME="value"
      commandArguments:
        type: string
        description: Arguments to command executable
      commandExe:
        type: string
        description: Executable to invoke at container start up
      serviceConfig:
        $ref: '#/definitions/ServiceConfig'
      gpuConfig:
        $ref: '#/definitions/GpuConfig'
      externalConfig:
        $ref: '#/definitions/ExternalConfig'
      status:
        type: string
        description: Process status
      userChartLocation:
        type: string
        description: Chart location for the deployment of the chart provided by the user
      userChartAlternateValues:
        type: string
        description: >-
          Chart values.yaml file location for the deployment of the chart
          provided by the user
      userChartGroup:
        type: string
        description: Chart supplemental information related to the group (service)
      meta:
        type: object
        description: 'Key/Value Pair Map (string, string)'
        additionalProperties:
          type: string
      userMeta:
        type: object
        description: 'Key/Value Pair Map (string, string)'
        additionalProperties:
          type: string
      appLatency:
        type: integer
        description: Latency in ms caused by the application
      appLatencyVariation:
        type: integer
        description: Latency variation in ms caused by the application
      appThroughput:
        type: integer
        description: The limit of the traffic supported by the application
      appPacketLoss:
        type: number
        format: double
        description: Packet lost (in terms of percentage) caused by the application
      placementId:
        type: string
        description: Identifier used for process placement in AdvantEDGE cluster
    description: Application or service object
    example: {}
  Release:
    type: object
    properties:
      name:
        type: string
        description: Release name
      state:
        type: string
        description: Current release state
    example:
      name: name
      state: state
  ReplayEvent:
    type: object
    properties:
      index:
        type: integer
        description: Event index
        readOnly: true
      time:
        type: integer
        description: Relative time (ms) an event happened since the begining of a replay sequence
      event:
        $ref: '#/definitions/Event'
    description: Replay event object
    example: {}
  Replay:
    type: object
    properties:
      description:
        type: string
        description: User description of the content of the replay file. 
      events:
        type: array
        items:
          $ref: '#/definitions/ReplayEvent'
    description: ReplayEvents from the Replay-file
    example: {}
  ReplayStatus:
    type: object
    properties:
      replayFileRunning:
        type: string
        description: Name of the replay file currently running
        readOnly: true
      index:
        type: integer
        description: Index of the last ran event
        readOnly: true
      maxIndex:
        type: integer
        description: Number of events in the replay file
        readOnly: true
      loopMode:
        type: boolean
        description: Loop mode enables
        readOnly: true
      timeRemaining:
        type: integer
        description: Total time remaining for the replay file after last event
      timeToNextEvent:
        type: integer
        description: Time remaining until the next event for the replay file after last event
    description: Replay status object
    example: {}
  ReplayFileList:
    type: object
    properties:
      replay-files:
        type: array
        items:
          type: string
    description: Replay-file list
    example: {}
  Scenario:
    type: object
    properties:
      version:
        type: string
        description: Scenario version
      id:
        type: string
        description: Unique scenario ID
      name:
        type: string
        description: Unique scenario name
      description:
        type: string
        description: User description of the scenario.
      config:
        $ref: '#/definitions/ScenarioConfig'
      deployment:
        $ref: '#/definitions/Deployment'
    description: Scenario object
    example: {}
  ScenarioConfig:
    type: object
    properties:
      visualization:
        type: string
        description: Visualization configuration
      other:
        type: string
        description: Other scenario configuration
    description: Scenario configuration
    example:
      visualization: visualization
      other: other
  ReplayInfo:
    type: object
    properties:
      scenarioName:
        type: string
        description: Scenario name
      description:
        type: string
        description: User description of the replay file
    description: Scenario information
    example: {}
  ScenarioList:
    type: object
    properties:
      scenarios:
        type: array
        items:
          $ref: '#/definitions/Scenario'
    description: Scenario list 
    example: {}
  ServiceConfig:
    type: object
    properties:
      name:
        type: string
        description: Unique service name
      meSvcName:
        type: string
        description: 'Multi-Edge service name, if any'
      ports:
        type: array
        items:
          $ref: '#/definitions/ServicePort'
    description: Service object
    example: {}
  ServicePort:
    type: object
    properties:
      protocol:
        type: string
        description: Protocol that the application is using (TCP or UDP)
      port:
        type: integer
        description: Port number that the service is listening on
      externalPort:
        type: integer
        description: >
          External port number on which to expose the application (30000 -
          32767)  <li>Only one application allowed per external port
          <li>Scenario builder must configure to prevent conflicts
    description: Service port object
    example: {}
  Settings:
    type: object
    description: 'MEEP settings - Key/Value Pair Map (string, string)'
    additionalProperties:
      type: string
  Zone:
    type: object
    properties:
      id:
        type: string
        description: Unique zone ID
      name:
        type: string
        description: Zone name
      type:
        type: string
        description: Zone type
        enum:
          - ZONE
          - COMMON
      netChar:
        $ref: '#/definitions/NetworkCharacteristics'
      interFogLatency:
        type: integer
        description: '**DEPRECATED** As of release 1.3.0, no longer supported'
      interFogLatencyVariation:
        type: integer
        description: '**DEPRECATED** As of release 1.3.0, no longer supported'
      interFogThroughput:
        type: integer
        description: '**DEPRECATED** As of release 1.3.0, no longer supported'
      interFogPacketLoss:
        type: number
        format: double
        description: '**DEPRECATED** As of release 1.3.0, no longer supported'
      interEdgeLatency:
        type: integer
        description: '**DEPRECATED** As of release 1.3.0, no longer supported'
      interEdgeLatencyVariation:
        type: integer
        description: '**DEPRECATED** As of release 1.3.0, no longer supported'
      interEdgeThroughput:
        type: integer
        description: '**DEPRECATED** As of release 1.3.0, no longer supported'
      interEdgePacketLoss:
        type: number
        format: double
        description: '**DEPRECATED** As of release 1.3.0, no longer supported'
      edgeFogLatency:
        type: integer
        description: '**DEPRECATED** As of release 1.3.0, replaced by netChar latency'
      edgeFogLatencyVariation:
        type: integer
        description: >-
          **DEPRECATED** As of release 1.3.0, replaced by netChar
          latencyVariation
      edgeFogThroughput:
        type: integer
        description: '**DEPRECATED** As of release 1.3.0, replaced by netChar throughput'
      edgeFogPacketLoss:
        type: number
        format: double
        description: '**DEPRECATED** As of release 1.3.0, replaced by netChar packetLoss'
      meta:
        type: object
        description: 'Key/Value Pair Map (string, string)'
        additionalProperties:
          type: string
      userMeta:
        type: object
        description: 'Key/Value Pair Map (string, string)'
        additionalProperties:
          type: string
      networkLocations:
        type: array
        items:
          $ref: '#/definitions/NetworkLocation'
    description: Logical zone (MEC network) object
    example: {}
