---
swagger: "2.0"
info:
  description: "This API is the main Platform Controller API for scenario configuration\
    \ & sandbox management <p>**Micro-service**<br>[meep-pfm-ctrl](https://github.com/InterDigitalInc/AdvantEDGE/tree/master/go-apps/meep-platform-ctrl)\
    \ <p>**Type & Usage**<br>Platform main interface used by controller software to\
    \ configure scenarios and manage sandboxes in the AdvantEDGE platform <p>**Details**<br>API\
    \ details available at _your-AdvantEDGE-ip-address/api_"
  version: "1.0.0"
  title: "AdvantEDGE Platform Controller REST API"
  contact:
    name: "InterDigital AdvantEDGE Support"
    email: "AdvantEDGE@InterDigital.com"
  license:
    name: "Apache 2.0"
    url: "https://github.com/InterDigitalInc/AdvantEDGE/blob/master/LICENSE"
basePath: "/platform-ctrl/v1"
tags:
- name: "Scenario Configuration"
- name: "Sandbox Control"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /scenarios:
    get:
      tags:
      - "Scenario Configuration"
      summary: "Get all scenarios"
      description: "Returns all scenarios from the platform scenario store"
      operationId: "getScenarioList"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ScenarioList"
        404:
          description: "Not found"
    delete:
      tags:
      - "Scenario Configuration"
      summary: "Delete all scenarios"
      description: "Delete all scenarios present in the platform scenario store"
      operationId: "deleteScenarioList"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
        404:
          description: "Not found"
  /scenarios/{name}:
    get:
      tags:
      - "Scenario Configuration"
      summary: "Get a specific scenario"
      description: "Get a scenario by name from the platform scenario store"
      operationId: "getScenario"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "Scenario name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Scenario"
        400:
          description: "Bad request"
        404:
          description: "Not found"
    post:
      tags:
      - "Scenario Configuration"
      summary: "Add a scenario"
      description: "Add a scenario to the platform scenario store"
      operationId: "createScenario"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "Scenario name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "scenario"
        description: "Scenario"
        required: true
        schema:
          $ref: "#/definitions/Scenario"
        x-exportParamName: "Scenario"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
        404:
          description: "Not found"
    put:
      tags:
      - "Scenario Configuration"
      summary: "Update a scenario"
      description: "Update a scenario by name in the platform scenario store"
      operationId: "setScenario"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "Scenario name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "scenario"
        description: "Scenario to add to MEEP store"
        required: true
        schema:
          $ref: "#/definitions/Scenario"
        x-exportParamName: "Scenario"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
        404:
          description: "Not found"
    delete:
      tags:
      - "Scenario Configuration"
      summary: "Delete a scenario"
      description: "Delete a scenario by name from the platform scenario store"
      operationId: "deleteScenario"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "Scenario name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
        404:
          description: "Not found"
  /sandboxes:
    get:
      tags:
      - "Sandbox Control"
      summary: "Get all active sandboxes"
      description: "Returns a list of all active sandboxes"
      operationId: "getSandboxList"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SandboxList"
        404:
          description: "Not found"
    post:
      tags:
      - "Sandbox Control"
      summary: "Create a new sandbox"
      description: "Create a new sandbox with a server-generated name"
      operationId: "createSandbox"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "config"
        description: "Sandbox configuration information"
        required: true
        schema:
          $ref: "#/definitions/SandboxConfig"
        x-exportParamName: "Config"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Sandbox"
        400:
          description: "Bad request"
        404:
          description: "Not found"
    delete:
      tags:
      - "Sandbox Control"
      summary: "Delete all active sandboxes"
      description: "Delete all active sandboxes"
      operationId: "deleteSandboxList"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
        404:
          description: "Not found"
  /sandboxes/{name}:
    get:
      tags:
      - "Sandbox Control"
      summary: "Get a specific sandbox"
      description: "Get sandbox information for provided sandbox name"
      operationId: "getSandbox"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "Sandbox name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Sandbox"
        400:
          description: "Bad request"
        404:
          description: "Not found"
    post:
      tags:
      - "Sandbox Control"
      summary: "Create a new sandbox"
      description: "Create a new sandbox using provided name"
      operationId: "createSandboxWithName"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "Sandbox name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "config"
        description: "Sandbox configuration information"
        required: true
        schema:
          $ref: "#/definitions/SandboxConfig"
        x-exportParamName: "Config"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
        404:
          description: "Already exists"
    delete:
      tags:
      - "Sandbox Control"
      summary: "Delete a specific sandbox"
      description: "Delete the sandbox with the provided name"
      operationId: "deleteSandbox"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "Sandbox name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
        404:
          description: "Not found"
definitions:
  ScenarioList:
    type: "object"
    properties:
      scenarios:
        type: "array"
        items:
          $ref: "#/definitions/Scenario"
    description: "Scenario list"
    example: {}
  Scenario:
    type: "object"
    properties:
      version:
        type: "string"
        description: "Scenario version"
      id:
        type: "string"
        description: "Unique scenario ID"
      name:
        type: "string"
        description: "Unique scenario name"
      description:
        type: "string"
        description: "User description of the scenario."
      config:
        $ref: "#/definitions/ScenarioConfig"
      deployment:
        $ref: "#/definitions/Deployment"
    description: "Scenario object"
    example: {}
  ScenarioConfig:
    type: "object"
    properties:
      visualization:
        type: "string"
        description: "Visualization configuration"
      other:
        type: "string"
        description: "Other scenario configuration"
    description: "Scenario configuration"
    example:
      visualization: "visualization"
      other: "other"
  Deployment:
    type: "object"
    properties:
      netChar:
        $ref: "#/definitions/NetworkCharacteristics"
      connectivity:
        $ref: "#/definitions/ConnectivityConfig"
      d2d:
        $ref: "#/definitions/D2dConfig"
      interDomainLatency:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar latency"
      interDomainLatencyVariation:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar latencyVariation"
      interDomainThroughput:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar throughputUl\
          \ and throughputDl"
      interDomainPacketLoss:
        type: "number"
        format: "double"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar packetLoss"
      meta:
        type: "object"
        description: "Key/Value Pair Map (string, string)"
        additionalProperties:
          type: "string"
      userMeta:
        type: "object"
        description: "Key/Value Pair Map (string, string)"
        additionalProperties:
          type: "string"
      domains:
        type: "array"
        items:
          $ref: "#/definitions/Domain"
    description: "Network deployment object"
    example: {}
  NetworkCharacteristics:
    type: "object"
    properties:
      latency:
        type: "integer"
        description: "Latency in ms"
      latencyVariation:
        type: "integer"
        description: "Latency variation in ms"
      latencyDistribution:
        type: "string"
        description: "Latency distribution. Can only be set in the Scenario Deployment\
          \ network characteristics, ignored otherwise. Latency distribution is set\
          \ for the whole network and applied to every end-to-end traffic flows. Default\
          \ value is 'Normal' distribution."
        enum:
        - "Normal"
        - "Pareto"
        - "Paretonormal"
        - "Uniform"
      throughput:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by throughputUl\
          \ and throughputDl"
      throughputDl:
        type: "integer"
        description: "Downlink throughput limit in Mbps"
      throughputUl:
        type: "integer"
        description: "Uplink throughput limit in Mbps"
      packetLoss:
        type: "number"
        format: "double"
        description: "Packet loss percentage"
    description: "Network characteristics object"
    example: {}
  ConnectivityConfig:
    type: "object"
    properties:
      model:
        type: "string"
        description: "Connectivity Model: <li>OPEN: Any node in the scenario can communicate\
          \ with any node <li>PDU: Terminal nodes (UE) require a PDU session to the\
          \ target DN"
        enum:
        - "OPEN"
        - "PDU"
    example: {}
  D2dConfig:
    type: "object"
    properties:
      d2dMinDistance:
        type: "number"
        description: "Minimum distance for D2D. Default distance is 100m"
      disableD2dViaNetwork:
        type: "boolean"
        description: "Enable-Disable D2D via network. Default value is false"
    description: "D2D config"
  Domain:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique domain ID"
      name:
        type: "string"
        description: "Domain name"
      type:
        type: "string"
        description: "Domain type"
        enum:
        - "OPERATOR"
        - "OPERATOR-CELLULAR"
        - "PUBLIC"
      netChar:
        $ref: "#/definitions/NetworkCharacteristics"
      interZoneLatency:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar latency"
      interZoneLatencyVariation:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar latencyVariation"
      interZoneThroughput:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar throughputUl\
          \ and throughputDl"
      interZonePacketLoss:
        type: "number"
        format: "double"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar packetLoss"
      meta:
        type: "object"
        description: "Key/Value Pair Map (string, string)"
        additionalProperties:
          type: "string"
      userMeta:
        type: "object"
        description: "Key/Value Pair Map (string, string)"
        additionalProperties:
          type: "string"
      cellularDomainConfig:
        $ref: "#/definitions/CellularDomainConfig"
      zones:
        type: "array"
        items:
          $ref: "#/definitions/Zone"
    description: "Operator domain object"
    example: {}
  CellularDomainConfig:
    type: "object"
    properties:
      mnc:
        type: "string"
        description: "Mobile Network Code part of PLMN identity as defined in ETSI\
          \ TS 136 413"
      mcc:
        type: "string"
        description: "Mobile Country Code part of PLMN identity as defined in ETSI\
          \ TS 136 413"
      defaultCellId:
        type: "string"
        description: "The E-UTRAN Cell Identity as defined in ETSI TS 136 413 if no\
          \ cellId is defined for the cell or if not applicable"
    description: "Cellular domain configuration information"
    example: {}
  Zone:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique zone ID"
      name:
        type: "string"
        description: "Zone name"
      type:
        type: "string"
        description: "Zone type"
        enum:
        - "ZONE"
        - "COMMON"
      netChar:
        $ref: "#/definitions/NetworkCharacteristics"
      interFogLatency:
        type: "integer"
        description: "**DEPRECATED** As of release 1.3.0, no longer supported"
      interFogLatencyVariation:
        type: "integer"
        description: "**DEPRECATED** As of release 1.3.0, no longer supported"
      interFogThroughput:
        type: "integer"
        description: "**DEPRECATED** As of release 1.3.0, no longer supported"
      interFogPacketLoss:
        type: "number"
        format: "double"
        description: "**DEPRECATED** As of release 1.3.0, no longer supported"
      interEdgeLatency:
        type: "integer"
        description: "**DEPRECATED** As of release 1.3.0, no longer supported"
      interEdgeLatencyVariation:
        type: "integer"
        description: "**DEPRECATED** As of release 1.3.0, no longer supported"
      interEdgeThroughput:
        type: "integer"
        description: "**DEPRECATED** As of release 1.3.0, no longer supported"
      interEdgePacketLoss:
        type: "number"
        format: "double"
        description: "**DEPRECATED** As of release 1.3.0, no longer supported"
      edgeFogLatency:
        type: "integer"
        description: "**DEPRECATED** As of release 1.3.0, replaced by netChar latency"
      edgeFogLatencyVariation:
        type: "integer"
        description: "**DEPRECATED** As of release 1.3.0, replaced by netChar latencyVariation"
      edgeFogThroughput:
        type: "integer"
        description: "**DEPRECATED** As of release 1.3.0, replaced by netChar throughput"
      edgeFogPacketLoss:
        type: "number"
        format: "double"
        description: "**DEPRECATED** As of release 1.3.0, replaced by netChar packetLoss"
      meta:
        type: "object"
        description: "Key/Value Pair Map (string, string)"
        additionalProperties:
          type: "string"
      userMeta:
        type: "object"
        description: "Key/Value Pair Map (string, string)"
        additionalProperties:
          type: "string"
      networkLocations:
        type: "array"
        items:
          $ref: "#/definitions/NetworkLocation"
    description: "Logical zone (MEC network) object"
    example: {}
  NetworkLocation:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique network location ID"
      name:
        type: "string"
        description: "Network location name"
      type:
        type: "string"
        description: "Network location type"
        enum:
        - "POA"
        - "POA-4G"
        - "POA-5G"
        - "POA-WIFI"
        - "DEFAULT"
      netChar:
        $ref: "#/definitions/NetworkCharacteristics"
      terminalLinkLatency:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar latency"
      terminalLinkLatencyVariation:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar latencyVariation"
      terminalLinkThroughput:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar throughputUl\
          \ and throughputDl"
      terminalLinkPacketLoss:
        type: "number"
        format: "double"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar packetLoss"
      meta:
        type: "object"
        description: "Key/Value Pair Map (string, string)"
        additionalProperties:
          type: "string"
      userMeta:
        type: "object"
        description: "Key/Value Pair Map (string, string)"
        additionalProperties:
          type: "string"
      cellularPoaConfig:
        $ref: "#/definitions/CellularPoaConfig"
      poa4GConfig:
        $ref: "#/definitions/Poa4GConfig"
      poa5GConfig:
        $ref: "#/definitions/Poa5GConfig"
      poaWifiConfig:
        $ref: "#/definitions/PoaWifiConfig"
      geoData:
        $ref: "#/definitions/GeoData"
      physicalLocations:
        type: "array"
        items:
          $ref: "#/definitions/PhysicalLocation"
    description: "Logical network location object"
    example: {}
  CellularPoaConfig:
    type: "object"
    properties:
      cellId:
        type: "string"
        description: "The E-UTRAN Cell Identity as defined in ETSI TS 136 413 including\
          \ the ID of the eNB serving the cell"
    description: "**DEPRECATED** As of release 1.5.1, renamed to poa4GConfig"
  Poa4GConfig:
    type: "object"
    properties:
      cellId:
        type: "string"
        description: "The E-UTRAN Cell Identity as defined in ETSI TS 136 413 including\
          \ the ID of the eNB serving the cell"
    description: "Cellular 4G POA configuration information"
  Poa5GConfig:
    type: "object"
    properties:
      cellId:
        type: "string"
        description: "The E-UTRAN Cell Identity as defined in ETSI TS 136 413 including\
          \ the ID of the NR serving the cell"
    description: "Cellular 5G POA configuration information"
  PoaWifiConfig:
    type: "object"
    properties:
      macId:
        type: "string"
        description: "WIFI POA MAC Address"
    description: "WIFI POA configuration information"
  GeoData:
    type: "object"
    properties:
      location:
        $ref: "#/definitions/Point"
      radius:
        type: "number"
        description: "Optional - Radius (in meters) around the location"
      path:
        $ref: "#/definitions/LineString"
      eopMode:
        type: "string"
        description: "End-of-Path mode: <li>LOOP: When path endpoint is reached, start\
          \ over from the beginning <li>REVERSE: When path endpoint is reached, return\
          \ on the reverse path"
        enum:
        - "LOOP"
        - "REVERSE"
      velocity:
        type: "number"
        description: "Speed of movement along path in m/s"
    description: "Geographic data"
  Point:
    type: "object"
    required:
    - "type"
    properties:
      type:
        type: "string"
        description: "Must be Point"
        enum:
        - "Point"
      coordinates:
        type: "array"
        description: "For a Point, coordinates MUST be an array of two decimal numbers;\
          \ longitude and latitude precisely in that order"
        items:
          type: "number"
    externalDocs:
      url: "https://tools.ietf.org/html/rfc7946"
    description: "A single position in coordinate space (GeoJSON); a position is an\
      \ array of two numbers"
  LineString:
    type: "object"
    required:
    - "type"
    properties:
      type:
        type: "string"
        description: "Must be LineString"
        enum:
        - "LineString"
      coordinates:
        type: "array"
        description: "For a LineString, coordinates is an array of two or more positions;\
          \ a position is an array of two decimal numbers (longitude and latitude\
          \ precisely in that order)"
        items:
          type: "array"
          items:
            type: "number"
    externalDocs:
      url: "https://tools.ietf.org/html/rfc7946"
    description: "An array of two or more positions in coordinate space (GeoJSON);\
      \ a position is an array of two numbers"
  PhysicalLocation:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique physical location ID"
      name:
        type: "string"
        description: "Physical location name"
      type:
        type: "string"
        description: "Physical location type"
        enum:
        - "UE"
        - "FOG"
        - "EDGE"
        - "CN"
        - "DC"
      isExternal:
        type: "boolean"
        description: "true: Physical location is external to MEEP\nfalse: Physical\
          \ location is internal to MEEP"
      geoData:
        $ref: "#/definitions/GeoData"
      networkLocationsInRange:
        type: "array"
        items:
          type: "string"
          description: "Names of network locations within range of physical location"
      connected:
        type: "boolean"
        description: "true: Physical location has network connectivity\nfalse: Physical\
          \ location has no network connectivity"
      wireless:
        type: "boolean"
        description: "true: Physical location uses a wireless connection\nfalse: Physical\
          \ location uses a wired connection"
      wirelessType:
        type: "string"
        description: "Prioritized, comma-separated list of supported wireless connection\
          \ types.\nDefault priority if not specififed is 'wifi,5g,4g,other'.\nWireless\
          \ connection types:\n- 4g\n- 5g\n- wifi\n- other"
      dataNetwork:
        $ref: "#/definitions/DNConfig"
      meta:
        type: "object"
        description: "Key/Value Pair Map (string, string)"
        additionalProperties:
          type: "string"
      userMeta:
        type: "object"
        description: "Key/Value Pair Map (string, string)"
        additionalProperties:
          type: "string"
      processes:
        type: "array"
        items:
          $ref: "#/definitions/Process"
      netChar:
        $ref: "#/definitions/NetworkCharacteristics"
      linkLatency:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar latency"
      linkLatencyVariation:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar latencyVariation"
      linkThroughput:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar throughputUl\
          \ and throughputDl"
      linkPacketLoss:
        type: "number"
        format: "double"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar packetLoss"
      macId:
        type: "string"
        description: "Physical location MAC Address"
    description: "Physical location object"
    example: {}
  DNConfig:
    type: "object"
    properties:
      dnn:
        type: "string"
        description: "Data Network Name"
      ladn:
        type: "boolean"
        description: "true: Data network serves local area only\nfalse: Data network\
          \ is not limited to local area"
      ecsp:
        type: "string"
        description: "Edge Compute Service Provider"
    description: "Data Network Configuration"
    example: {}
  Process:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique process ID"
      name:
        type: "string"
        description: "Process name"
      type:
        type: "string"
        description: "Process type"
        enum:
        - "UE-APP"
        - "EDGE-APP"
        - "MEC-SVC"
        - "CLOUD-APP"
      isExternal:
        type: "boolean"
        description: "true: process is external to MEEP\nfalse: process is internal\
          \ to MEEP"
      image:
        type: "string"
        description: "Docker image to deploy inside MEEP"
      environment:
        type: "string"
        description: "Environment variables using the format NAME=\"value\",NAME=\"\
          value\",NAME=\"value\""
      commandArguments:
        type: "string"
        description: "Arguments to command executable"
      commandExe:
        type: "string"
        description: "Executable to invoke at container start up"
      serviceConfig:
        $ref: "#/definitions/ServiceConfig"
      gpuConfig:
        $ref: "#/definitions/GpuConfig"
      memoryConfig:
        $ref: "#/definitions/MemoryConfig"
      cpuConfig:
        $ref: "#/definitions/CpuConfig"
      externalConfig:
        $ref: "#/definitions/ExternalConfig"
      status:
        type: "string"
        description: "Process status"
      userChartLocation:
        type: "string"
        description: "Chart location for the deployment of the chart provided by the\
          \ user"
      userChartAlternateValues:
        type: "string"
        description: "Chart values.yaml file location for the deployment of the chart\
          \ provided by the user"
      userChartGroup:
        type: "string"
        description: "Chart supplemental information related to the group (service)"
      meta:
        type: "object"
        description: "Key/Value Pair Map (string, string)"
        additionalProperties:
          type: "string"
      userMeta:
        type: "object"
        description: "Key/Value Pair Map (string, string)"
        additionalProperties:
          type: "string"
      netChar:
        $ref: "#/definitions/NetworkCharacteristics"
      appLatency:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar latency"
      appLatencyVariation:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar latencyVariation"
      appThroughput:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar throughputUl\
          \ and throughputDl"
      appPacketLoss:
        type: "number"
        format: "double"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar packetLoss"
      placementId:
        type: "string"
        description: "Identifier used for process placement in AdvantEDGE cluster"
    description: "Application or service object"
    example: {}
  ServiceConfig:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Unique service name"
      meSvcName:
        type: "string"
        description: "Multi-Edge service name, if any"
      ports:
        type: "array"
        items:
          $ref: "#/definitions/ServicePort"
    description: "Service object"
    example: {}
  ServicePort:
    type: "object"
    properties:
      protocol:
        type: "string"
        description: "Protocol that the application is using (TCP or UDP)"
      port:
        type: "integer"
        description: "Port number that the service is listening on"
      externalPort:
        type: "integer"
        description: "External port number on which to expose the application (30000\
          \ - 32767)  <li>Only one application allowed per external port <li>Scenario\
          \ builder must configure to prevent conflicts\n"
    description: "Service port object"
    example: {}
  GpuConfig:
    type: "object"
    properties:
      type:
        type: "string"
        description: "Requested GPU type"
      count:
        type: "integer"
        description: "Number of GPUs requested"
    description: "GPU configuration object"
  MemoryConfig:
    type: "object"
    properties:
      min:
        type: "integer"
        description: "Minimum requested memory"
      max:
        type: "integer"
        description: "Maximum requested memory"
    description: "Memory configuration object"
  CpuConfig:
    type: "object"
    properties:
      min:
        type: "number"
        format: "float"
        description: "Minimum requested CPU"
      max:
        type: "number"
        format: "float"
        description: "Maximum requested CPU"
    description: "CPU configuration object"
  ExternalConfig:
    type: "object"
    properties:
      ingressServiceMap:
        type: "array"
        items:
          $ref: "#/definitions/IngressService"
      egressServiceMap:
        type: "array"
        items:
          $ref: "#/definitions/EgressService"
    description: "External Process configuration.\nNOTE: Only valid if 'isExternal'\
      \ is set."
    example: {}
  IngressService:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Service name (unique or multi-edge)"
      port:
        type: "integer"
        description: "Internal service port number"
      externalPort:
        type: "integer"
        description: "Externally-exposed unique service port in range (30000 - 32767)"
      protocol:
        type: "string"
        description: "Service protocol (TCP or UDP)"
    description: "Internal service exposed externally via specific port"
  EgressService:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Service name"
      meSvcName:
        type: "string"
        description: "Multi-Edge service name, if any"
      ip:
        type: "string"
        description: "External node IP address"
      port:
        type: "integer"
        description: "Service port number"
      protocol:
        type: "string"
        description: "Service protocol (TCP or UDP)"
    description: "External service exposed internally via specific port"
  SandboxList:
    type: "object"
    properties:
      sandboxes:
        type: "array"
        items:
          $ref: "#/definitions/Sandbox"
    description: "Sandbox list"
    example: {}
  Sandbox:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Sandbox name"
    description: "Sandbox object"
    example: {}
  SandboxConfig:
    type: "object"
    properties:
      scenarioName:
        type: "string"
        description: "Name of scenario to activate in sandbox"
    description: "Sandbox configuration object"
    example: {}
responses:
  Std200:
    description: "OK"
  Std201:
    description: "Created"
  Std202:
    description: "Accepted"
  Std204:
    description: "No content"
  Std304:
    description: "Not modified"
  Std400:
    description: "Bad request"
  Std401:
    description: "Not authorized"
  Std403:
    description: "Forbidden"
  Std404:
    description: "Not found"
  Std409:
    description: "Conflict"
  Std416:
    description: "Requested range not satisfiable"
  Std500:
    description: "Internal server error"
externalDocs:
  description: "GitHub Wiki"
  url: "https://github.com/InterDigitalInc/AdvantEDGE/wiki"
