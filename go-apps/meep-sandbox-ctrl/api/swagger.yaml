---
swagger: "2.0"
info:
  description: "This API is the main Sandbox Controller API for scenario deployment\
    \ & event injection <p>**Micro-service**<br>[meep-sandbox-ctrl](https://github.com/InterDigitalInc/AdvantEDGE/tree/master/go-apps/meep-sandbox-ctrl)\
    \ <p>**Type & Usage**<br>Platform runtime interface to manage active scenarios\
    \ and inject events in AdvantEDGE platform <p>**Details**<br>API details available\
    \ at _your-AdvantEDGE-ip-address/api_"
  version: "1.0.0"
  title: "AdvantEDGE Sandbox Controller REST API"
  contact:
    name: "InterDigital AdvantEDGE Support"
    email: "AdvantEDGE@InterDigital.com"
  license:
    name: "Apache 2.0"
    url: "https://github.com/InterDigitalInc/AdvantEDGE/blob/master/LICENSE"
basePath: "/sandboxname/sandbox-ctrl/v1"
tags:
- name: "Active Scenario"
- name: "Events"
- name: "Event Replay"
- name: "Connectivity"
- name: "Applications"
- name: "Services"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /active:
    get:
      tags:
      - "Active Scenario"
      summary: "Get the deployed scenario"
      description: "Get the scenario currently deployed on the platform"
      operationId: "getActiveScenario"
      produces:
      - "application/json"
      parameters:
      - name: "minimize"
        in: "query"
        description: "Return minimized scenario element content"
        required: false
        type: "boolean"
        x-exportParamName: "Minimize"
        x-optionalDataType: "Bool"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Scenario"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
    delete:
      tags:
      - "Active Scenario"
      summary: "Terminate the deployed scenario"
      description: "Terminate the scenario currently deployed on the platform"
      operationId: "terminateScenario"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
  /active/{name}:
    post:
      tags:
      - "Active Scenario"
      summary: "Deploy a scenario"
      description: "Deploy a scenario present in the platform scenario store"
      operationId: "activateScenario"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "Scenario name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "activationInfo"
        description: "Activation information"
        required: false
        schema:
          $ref: "#/definitions/ActivationInfo"
        x-exportParamName: "ActivationInfo"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
  /active/serviceMaps:
    get:
      tags:
      - "Active Scenario"
      summary: "Get deployed scenario's port mapping"
      description: "Returns the deployed scenario's port mapping<p> <li>Ports are\
        \ used by external nodes to access services internal to the platform <li>Port\
        \ mapping concept for external nodes is available [here](https://github.com/InterDigitalInc/AdvantEDGE/wiki/external-ue#port-mapping)"
      operationId: "getActiveNodeServiceMaps"
      produces:
      - "application/json"
      parameters:
      - name: "node"
        in: "query"
        description: "Unique node identifier"
        required: false
        type: "string"
        x-exportParamName: "Node"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Exposed service type (ingress or egress)"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "service"
        in: "query"
        description: "Exposed service name"
        required: false
        type: "string"
        x-exportParamName: "Service"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/NodeServiceMaps"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
  /active/domains:
    get:
      tags:
      - "Active Scenario"
      summary: "Get domain elements from the deployed scenario"
      description: "Returns a filtered list of domain elements from the deployed scenario\
        \ using the provided query parameters"
      operationId: "getActiveScenarioDomain"
      produces:
      - "application/json"
      parameters:
      - name: "domain"
        in: "query"
        description: "Domain name"
        required: false
        type: "string"
        x-exportParamName: "Domain"
        x-optionalDataType: "String"
      - name: "domainType"
        in: "query"
        description: "Domain type"
        required: false
        type: "string"
        enum:
        - "OPERATOR"
        - "OPERATOR-CELLULAR"
        x-exportParamName: "DomainType"
        x-optionalDataType: "String"
      - name: "zone"
        in: "query"
        description: "Zone name"
        required: false
        type: "string"
        x-exportParamName: "Zone"
        x-optionalDataType: "String"
      - name: "networkLocation"
        in: "query"
        description: "Network Location name"
        required: false
        type: "string"
        x-exportParamName: "NetworkLocation"
        x-optionalDataType: "String"
      - name: "networkLocationType"
        in: "query"
        description: "Network Location type"
        required: false
        type: "string"
        enum:
        - "POA"
        - "POA-4G"
        - "POA-5G"
        - "POA-WIFI"
        x-exportParamName: "NetworkLocationType"
        x-optionalDataType: "String"
      - name: "physicalLocation"
        in: "query"
        description: "Physical Location name"
        required: false
        type: "string"
        x-exportParamName: "PhysicalLocation"
        x-optionalDataType: "String"
      - name: "physicalLocationType"
        in: "query"
        description: "Physical Location type"
        required: false
        type: "string"
        enum:
        - "DC"
        - "EDGE"
        - "FOG"
        - "UE"
        x-exportParamName: "PhysicalLocationType"
        x-optionalDataType: "String"
      - name: "process"
        in: "query"
        description: "Process name"
        required: false
        type: "string"
        x-exportParamName: "Process"
        x-optionalDataType: "String"
      - name: "processType"
        in: "query"
        description: "Process type"
        required: false
        type: "string"
        enum:
        - "CLOUD-APP"
        - "EDGE-APP"
        - "UE-APP"
        x-exportParamName: "ProcessType"
        x-optionalDataType: "String"
      - name: "excludeChildren"
        in: "query"
        description: "Include child elements in response"
        required: false
        type: "boolean"
        x-exportParamName: "ExcludeChildren"
        x-optionalDataType: "Bool"
      - name: "minimize"
        in: "query"
        description: "Return minimized scenario element content"
        required: false
        type: "boolean"
        x-exportParamName: "Minimize"
        x-optionalDataType: "Bool"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Domains"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
  /active/zones:
    get:
      tags:
      - "Active Scenario"
      summary: "Get zone elements from the deployed scenario"
      description: "Returns a filtered list of zone elements from the deployed scenario\
        \ using the provided query parameters"
      operationId: "getActiveScenarioZone"
      produces:
      - "application/json"
      parameters:
      - name: "domain"
        in: "query"
        description: "Domain name"
        required: false
        type: "string"
        x-exportParamName: "Domain"
        x-optionalDataType: "String"
      - name: "domainType"
        in: "query"
        description: "Domain type"
        required: false
        type: "string"
        enum:
        - "OPERATOR"
        - "OPERATOR-CELLULAR"
        x-exportParamName: "DomainType"
        x-optionalDataType: "String"
      - name: "zone"
        in: "query"
        description: "Zone name"
        required: false
        type: "string"
        x-exportParamName: "Zone"
        x-optionalDataType: "String"
      - name: "networkLocation"
        in: "query"
        description: "Network Location name"
        required: false
        type: "string"
        x-exportParamName: "NetworkLocation"
        x-optionalDataType: "String"
      - name: "networkLocationType"
        in: "query"
        description: "Network Location type"
        required: false
        type: "string"
        enum:
        - "POA"
        - "POA-4G"
        - "POA-5G"
        - "POA-WIFI"
        x-exportParamName: "NetworkLocationType"
        x-optionalDataType: "String"
      - name: "physicalLocation"
        in: "query"
        description: "Physical Location name"
        required: false
        type: "string"
        x-exportParamName: "PhysicalLocation"
        x-optionalDataType: "String"
      - name: "physicalLocationType"
        in: "query"
        description: "Physical Location type"
        required: false
        type: "string"
        enum:
        - "DC"
        - "EDGE"
        - "FOG"
        - "UE"
        x-exportParamName: "PhysicalLocationType"
        x-optionalDataType: "String"
      - name: "process"
        in: "query"
        description: "Process name"
        required: false
        type: "string"
        x-exportParamName: "Process"
        x-optionalDataType: "String"
      - name: "processType"
        in: "query"
        description: "Process type"
        required: false
        type: "string"
        enum:
        - "CLOUD-APP"
        - "EDGE-APP"
        - "UE-APP"
        x-exportParamName: "ProcessType"
        x-optionalDataType: "String"
      - name: "excludeChildren"
        in: "query"
        description: "Include child elements in response"
        required: false
        type: "boolean"
        x-exportParamName: "ExcludeChildren"
        x-optionalDataType: "Bool"
      - name: "minimize"
        in: "query"
        description: "Return minimized scenario element content"
        required: false
        type: "boolean"
        x-exportParamName: "Minimize"
        x-optionalDataType: "Bool"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Zones"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
  /active/networkLocations:
    get:
      tags:
      - "Active Scenario"
      summary: "Get network location elements from the deployed scenario"
      description: "Returns a filtered list of network location elements from the\
        \ deployed scenario using the provided query parameters"
      operationId: "getActiveScenarioNetworkLocation"
      produces:
      - "application/json"
      parameters:
      - name: "domain"
        in: "query"
        description: "Domain name"
        required: false
        type: "string"
        x-exportParamName: "Domain"
        x-optionalDataType: "String"
      - name: "domainType"
        in: "query"
        description: "Domain type"
        required: false
        type: "string"
        enum:
        - "OPERATOR"
        - "OPERATOR-CELLULAR"
        x-exportParamName: "DomainType"
        x-optionalDataType: "String"
      - name: "zone"
        in: "query"
        description: "Zone name"
        required: false
        type: "string"
        x-exportParamName: "Zone"
        x-optionalDataType: "String"
      - name: "networkLocation"
        in: "query"
        description: "Network Location name"
        required: false
        type: "string"
        x-exportParamName: "NetworkLocation"
        x-optionalDataType: "String"
      - name: "networkLocationType"
        in: "query"
        description: "Network Location type"
        required: false
        type: "string"
        enum:
        - "POA"
        - "POA-4G"
        - "POA-5G"
        - "POA-WIFI"
        x-exportParamName: "NetworkLocationType"
        x-optionalDataType: "String"
      - name: "physicalLocation"
        in: "query"
        description: "Physical Location name"
        required: false
        type: "string"
        x-exportParamName: "PhysicalLocation"
        x-optionalDataType: "String"
      - name: "physicalLocationType"
        in: "query"
        description: "Physical Location type"
        required: false
        type: "string"
        enum:
        - "DC"
        - "EDGE"
        - "FOG"
        - "UE"
        x-exportParamName: "PhysicalLocationType"
        x-optionalDataType: "String"
      - name: "process"
        in: "query"
        description: "Process name"
        required: false
        type: "string"
        x-exportParamName: "Process"
        x-optionalDataType: "String"
      - name: "processType"
        in: "query"
        description: "Process type"
        required: false
        type: "string"
        enum:
        - "CLOUD-APP"
        - "EDGE-APP"
        - "UE-APP"
        x-exportParamName: "ProcessType"
        x-optionalDataType: "String"
      - name: "excludeChildren"
        in: "query"
        description: "Include child elements in response"
        required: false
        type: "boolean"
        x-exportParamName: "ExcludeChildren"
        x-optionalDataType: "Bool"
      - name: "minimize"
        in: "query"
        description: "Return minimized scenario element content"
        required: false
        type: "boolean"
        x-exportParamName: "Minimize"
        x-optionalDataType: "Bool"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/NetworkLocations"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
  /active/physicalLocations:
    get:
      tags:
      - "Active Scenario"
      summary: "Get physical location elements from the deployed scenario"
      description: "Returns a filtered list of physical location elements from the\
        \ deployed scenario using the provided query parameters"
      operationId: "getActiveScenarioPhysicalLocation"
      produces:
      - "application/json"
      parameters:
      - name: "domain"
        in: "query"
        description: "Domain name"
        required: false
        type: "string"
        x-exportParamName: "Domain"
        x-optionalDataType: "String"
      - name: "domainType"
        in: "query"
        description: "Domain type"
        required: false
        type: "string"
        enum:
        - "OPERATOR"
        - "OPERATOR-CELLULAR"
        x-exportParamName: "DomainType"
        x-optionalDataType: "String"
      - name: "zone"
        in: "query"
        description: "Zone name"
        required: false
        type: "string"
        x-exportParamName: "Zone"
        x-optionalDataType: "String"
      - name: "networkLocation"
        in: "query"
        description: "Network Location name"
        required: false
        type: "string"
        x-exportParamName: "NetworkLocation"
        x-optionalDataType: "String"
      - name: "networkLocationType"
        in: "query"
        description: "Network Location type"
        required: false
        type: "string"
        enum:
        - "POA"
        - "POA-4G"
        - "POA-5G"
        - "POA-WIFI"
        x-exportParamName: "NetworkLocationType"
        x-optionalDataType: "String"
      - name: "physicalLocation"
        in: "query"
        description: "Physical Location name"
        required: false
        type: "string"
        x-exportParamName: "PhysicalLocation"
        x-optionalDataType: "String"
      - name: "physicalLocationType"
        in: "query"
        description: "Physical Location type"
        required: false
        type: "string"
        enum:
        - "DC"
        - "EDGE"
        - "FOG"
        - "UE"
        x-exportParamName: "PhysicalLocationType"
        x-optionalDataType: "String"
      - name: "process"
        in: "query"
        description: "Process name"
        required: false
        type: "string"
        x-exportParamName: "Process"
        x-optionalDataType: "String"
      - name: "processType"
        in: "query"
        description: "Process type"
        required: false
        type: "string"
        enum:
        - "CLOUD-APP"
        - "EDGE-APP"
        - "UE-APP"
        x-exportParamName: "ProcessType"
        x-optionalDataType: "String"
      - name: "excludeChildren"
        in: "query"
        description: "Include child elements in response"
        required: false
        type: "boolean"
        x-exportParamName: "ExcludeChildren"
        x-optionalDataType: "Bool"
      - name: "minimize"
        in: "query"
        description: "Return minimized scenario element content"
        required: false
        type: "boolean"
        x-exportParamName: "Minimize"
        x-optionalDataType: "Bool"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PhysicalLocations"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
  /active/processes:
    get:
      tags:
      - "Active Scenario"
      summary: "Get process elements from the deployed scenario"
      description: "Returns a filtered list of process elements from the deployed\
        \ scenario using the provided query parameters"
      operationId: "getActiveScenarioProcess"
      produces:
      - "application/json"
      parameters:
      - name: "domain"
        in: "query"
        description: "Domain name"
        required: false
        type: "string"
        x-exportParamName: "Domain"
        x-optionalDataType: "String"
      - name: "domainType"
        in: "query"
        description: "Domain type"
        required: false
        type: "string"
        enum:
        - "OPERATOR"
        - "OPERATOR-CELLULAR"
        x-exportParamName: "DomainType"
        x-optionalDataType: "String"
      - name: "zone"
        in: "query"
        description: "Zone name"
        required: false
        type: "string"
        x-exportParamName: "Zone"
        x-optionalDataType: "String"
      - name: "networkLocation"
        in: "query"
        description: "Network Location name"
        required: false
        type: "string"
        x-exportParamName: "NetworkLocation"
        x-optionalDataType: "String"
      - name: "networkLocationType"
        in: "query"
        description: "Network Location type"
        required: false
        type: "string"
        enum:
        - "POA"
        - "POA-4G"
        - "POA-5G"
        - "POA-WIFI"
        x-exportParamName: "NetworkLocationType"
        x-optionalDataType: "String"
      - name: "physicalLocation"
        in: "query"
        description: "Physical Location name"
        required: false
        type: "string"
        x-exportParamName: "PhysicalLocation"
        x-optionalDataType: "String"
      - name: "physicalLocationType"
        in: "query"
        description: "Physical Location type"
        required: false
        type: "string"
        enum:
        - "DC"
        - "EDGE"
        - "FOG"
        - "UE"
        x-exportParamName: "PhysicalLocationType"
        x-optionalDataType: "String"
      - name: "process"
        in: "query"
        description: "Process name"
        required: false
        type: "string"
        x-exportParamName: "Process"
        x-optionalDataType: "String"
      - name: "processType"
        in: "query"
        description: "Process type"
        required: false
        type: "string"
        enum:
        - "CLOUD-APP"
        - "EDGE-APP"
        - "UE-APP"
        x-exportParamName: "ProcessType"
        x-optionalDataType: "String"
      - name: "excludeChildren"
        in: "query"
        description: "Include child elements in response"
        required: false
        type: "boolean"
        x-exportParamName: "ExcludeChildren"
        x-optionalDataType: "Bool"
      - name: "minimize"
        in: "query"
        description: "Return minimized scenario element content"
        required: false
        type: "boolean"
        x-exportParamName: "Minimize"
        x-optionalDataType: "Bool"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Processes"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
  /events/{type}:
    post:
      tags:
      - "Events"
      summary: "Send events to the deployed scenario"
      description: "Generate events towards the deployed scenario.\nEvents:\n<li>MOBILITY:\
        \ move a node in the emulated network\n<li>NETWORK-CHARACTERISTICS-UPDATE:\
        \ change network characteristics dynamically\n<li>POAS-IN-RANGE: provide PoAs\
        \ in range of a UE (used with ApplicationState Transfer)\n<li>SCENARIO-UPDATE:\
        \ Add/Remove/Modify node in active scenario\n<li>PDU-SESSION: Add/Remove active\
        \ PDU session"
      operationId: "sendEvent"
      produces:
      - "application/json"
      parameters:
      - name: "type"
        in: "path"
        description: "Event type"
        required: true
        type: "string"
        x-exportParamName: "Type_"
      - in: "body"
        name: "event"
        description: "Event to send to active scenario"
        required: true
        schema:
          $ref: "#/definitions/Event"
        x-exportParamName: "Event"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
  /replay:
    get:
      tags:
      - "Event Replay"
      summary: "Get all replay file names"
      description: "Returns a list of all replay files names present in the platform\
        \ store"
      operationId: "getReplayFileList"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ReplayFileList"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
    delete:
      tags:
      - "Event Replay"
      summary: "Delete all replay files"
      description: "Delete all replay files present in the platform store"
      operationId: "deleteReplayFileList"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
  /replaystatus:
    get:
      tags:
      - "Event Replay"
      summary: "Get status of replay manager"
      description: "Returns status information on the replay manager"
      operationId: "getReplayStatus"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ReplayStatus"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
  /replay/{name}:
    get:
      tags:
      - "Event Replay"
      summary: "Get a specific replay file"
      description: "Get a replay file by name from the platform store"
      operationId: "getReplayFile"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "replay file name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Replay"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
    post:
      tags:
      - "Event Replay"
      summary: "Add a replay file"
      description: "Add a replay file to the platform store"
      operationId: "createReplayFile"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "replay file name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "replay-file"
        description: "Replay-file"
        required: true
        schema:
          $ref: "#/definitions/Replay"
        x-exportParamName: "ReplayFile"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
    delete:
      tags:
      - "Event Replay"
      summary: "Delete a replay file"
      description: "Delete a replay file by name from the platform store"
      operationId: "deleteReplayFile"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "replay file name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "OK"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
  /replay/{name}/generate:
    post:
      tags:
      - "Event Replay"
      summary: "Generate a replay file from Active Scenario events"
      description: "Generate a replay file using events from the latest execution\
        \ of a scenario"
      operationId: "createReplayFileFromScenarioExec"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "replay file name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "replayInfo"
        description: "Replay information"
        required: true
        schema:
          $ref: "#/definitions/ReplayInfo"
        x-exportParamName: "ReplayInfo"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
  /replay/{name}/play:
    post:
      tags:
      - "Event Replay"
      summary: "Execute a replay file present in the platform store"
      description: "Execute a replay file present in the platform store"
      operationId: "playReplayFile"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "replay file name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
  /replay/{name}/loop:
    post:
      tags:
      - "Event Replay"
      summary: "Loop-Execute a replay file present in the platform store"
      description: "Loop-Execute a replay file present in the platform store"
      operationId: "loopReplay"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "replay file name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
  /replay/{name}/stop:
    post:
      tags:
      - "Event Replay"
      summary: "Stop execution of a replay file"
      description: "Stop execution a replay file"
      operationId: "stopReplayFile"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "replay file name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
  /connectivity/pdu-session:
    get:
      tags:
      - "Connectivity"
      summary: "Get list of PDU Sessions"
      description: "Get list of active PDU Sessions matching provided filters"
      operationId: "getPduSessionList"
      produces:
      - "application/json"
      parameters:
      - name: "ue"
        in: "query"
        description: "Return PDU sessions matching provided UE name"
        required: false
        type: "string"
        x-exportParamName: "Ue"
        x-optionalDataType: "String"
      - name: "id"
        in: "query"
        description: "Return PDU session matching provided PDU session ID"
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PDUSessionList"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
  /connectivity/pdu-session/{ueName}/{pduSessionId}:
    post:
      tags:
      - "Connectivity"
      summary: "Create a PDU Session"
      description: "Establish a PDU Session to a Data Network defined in the scenario"
      operationId: "createPduSession"
      produces:
      - "application/json"
      parameters:
      - name: "ueName"
        in: "path"
        description: "UE unique identifier from the scenario"
        required: true
        type: "string"
        x-exportParamName: "UeName"
      - name: "pduSessionId"
        in: "path"
        description: "a UE provided identifier for the PDU Session"
        required: true
        type: "string"
        x-exportParamName: "PduSessionId"
      - in: "body"
        name: "pduSessionInfo"
        description: "PDU session information"
        required: true
        schema:
          $ref: "#/definitions/PDUSessionInfo"
        x-exportParamName: "PduSessionInfo"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
    delete:
      tags:
      - "Connectivity"
      summary: "Terminate a PDU Session"
      description: "Terminate a PDU session to a Data Network defined in the scenario"
      operationId: "terminatePduSession"
      produces:
      - "application/json"
      parameters:
      - name: "ueName"
        in: "path"
        description: "UE unique identifier from the scenario"
        required: true
        type: "string"
        x-exportParamName: "UeName"
      - name: "pduSessionId"
        in: "path"
        description: "a UE provided identifier for the PDU Session"
        required: true
        type: "string"
        x-exportParamName: "PduSessionId"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
  /applications:
    get:
      tags:
      - "Applications"
      description: "This method retrieves information about a list of mec application\
        \ resources."
      operationId: "Applications_GET"
      parameters:
      - name: "app"
        in: "query"
        description: "Application name"
        required: false
        type: "string"
        x-exportParamName: "App"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Application type"
        required: false
        type: "string"
        enum:
        - "USER"
        - "SYSTEM"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "nodeName"
        in: "query"
        description: "Node name"
        required: false
        type: "string"
        x-exportParamName: "NodeName"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ApplicationInfo"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
    post:
      tags:
      - "Applications"
      description: "This method is used to create a mec application resource."
      operationId: "Applications_POST"
      parameters:
      - in: "body"
        name: "applicationInfo"
        description: "Application information"
        required: true
        schema:
          $ref: "#/definitions/ApplicationInfo"
        x-exportParamName: "ApplicationInfo"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/ApplicationInfo"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
  /applications/{appInstanceId}:
    get:
      tags:
      - "Applications"
      description: "This method retrieves information about a mec application resource."
      operationId: "ApplicationsAppInstanceId_GET"
      parameters:
      - name: "appInstanceId"
        in: "path"
        description: "Represents a MEC application instance. Note that the appInstanceId\
          \ is allocated by the MEC application manager POST method."
        required: true
        type: "string"
        x-exportParamName: "AppInstanceId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ApplicationInfo"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
    put:
      tags:
      - "Applications"
      description: "This method updates the information about a mec application resource."
      operationId: "ApplicationsAppInstanceId_PUT"
      parameters:
      - name: "appInstanceId"
        in: "path"
        description: "Represents a MEC application instance. Note that the appInstanceId\
          \ is allocated by the MEC application manager POST method."
        required: true
        type: "string"
        x-exportParamName: "AppInstanceId"
      - in: "body"
        name: "applicationInfo"
        description: "Application information"
        required: true
        schema:
          $ref: "#/definitions/ApplicationInfo"
        x-exportParamName: "ApplicationInfo"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ApplicationInfo"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
    delete:
      tags:
      - "Applications"
      description: "This method deletes a mec application resource."
      operationId: "ApplicationsAppInstanceId_DELETE"
      parameters:
      - name: "appInstanceId"
        in: "path"
        description: "Represents a MEC application instance. Note that the appInstanceId\
          \ is allocated by the MEC application manager POST method."
        required: true
        type: "string"
        x-exportParamName: "AppInstanceId"
      responses:
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
  /services:
    get:
      tags:
      - "Services"
      description: "This method retrieves registered MEC application services."
      operationId: "Services_GET"
      parameters:
      - name: "appInstanceId"
        in: "query"
        description: "MEC application instance identifier"
        required: false
        type: "string"
        x-exportParamName: "AppInstanceId"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ServiceInfo"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
definitions:
  Scenario:
    type: "object"
    properties:
      version:
        type: "string"
        description: "Scenario version"
      id:
        type: "string"
        description: "Unique scenario ID"
      name:
        type: "string"
        description: "Unique scenario name"
      description:
        type: "string"
        description: "User description of the scenario."
      config:
        $ref: "#/definitions/ScenarioConfig"
      deployment:
        $ref: "#/definitions/Deployment"
    description: "Scenario object"
    example: {}
  ScenarioConfig:
    type: "object"
    properties:
      visualization:
        type: "string"
        description: "Visualization configuration"
      other:
        type: "string"
        description: "Other scenario configuration"
    description: "Scenario configuration"
    example:
      visualization: "visualization"
      other: "other"
  Deployment:
    type: "object"
    properties:
      netChar:
        $ref: "#/definitions/NetworkCharacteristics"
      connectivity:
        $ref: "#/definitions/ConnectivityConfig"
      d2d:
        $ref: "#/definitions/D2dConfig"
      interDomainLatency:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar latency"
      interDomainLatencyVariation:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar latencyVariation"
      interDomainThroughput:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar throughputUl\
          \ and throughputDl"
      interDomainPacketLoss:
        type: "number"
        format: "double"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar packetLoss"
      meta:
        type: "object"
        description: "Key/Value Pair Map (string, string)"
        additionalProperties:
          type: "string"
      userMeta:
        type: "object"
        description: "Key/Value Pair Map (string, string)"
        additionalProperties:
          type: "string"
      domains:
        type: "array"
        items:
          $ref: "#/definitions/Domain"
    description: "Network deployment object"
    example: {}
  NetworkCharacteristics:
    type: "object"
    properties:
      latency:
        type: "integer"
        description: "Latency in ms"
      latencyVariation:
        type: "integer"
        description: "Latency variation in ms"
      latencyDistribution:
        type: "string"
        description: "Latency distribution. Can only be set in the Scenario Deployment\
          \ network characteristics, ignored otherwise. Latency distribution is set\
          \ for the whole network and applied to every end-to-end traffic flows. Default\
          \ value is 'Normal' distribution."
        enum:
        - "Normal"
        - "Pareto"
        - "Paretonormal"
        - "Uniform"
      throughput:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by throughputUl\
          \ and throughputDl"
      throughputDl:
        type: "integer"
        description: "Downlink throughput limit in Mbps"
      throughputUl:
        type: "integer"
        description: "Uplink throughput limit in Mbps"
      packetLoss:
        type: "number"
        format: "double"
        description: "Packet loss percentage"
    description: "Network characteristics object"
    example: {}
  ConnectivityConfig:
    type: "object"
    properties:
      model:
        type: "string"
        description: "Connectivity Model: <li>OPEN: Any node in the scenario can communicate\
          \ with any node <li>PDU: Terminal nodes (UE) require a PDU session to the\
          \ target DN"
        enum:
        - "OPEN"
        - "PDU"
    example: {}
  D2dConfig:
    type: "object"
    properties:
      d2dMinDistance:
        type: "number"
        description: "Minimum distance for D2D. Default distance is 100m"
      disableD2dViaNetwork:
        type: "boolean"
        description: "Enable-Disable D2D via network. Default value is false"
    description: "D2D config"
  Domain:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique domain ID"
      name:
        type: "string"
        description: "Domain name"
      type:
        type: "string"
        description: "Domain type"
        enum:
        - "OPERATOR"
        - "OPERATOR-CELLULAR"
        - "PUBLIC"
      netChar:
        $ref: "#/definitions/NetworkCharacteristics"
      interZoneLatency:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar latency"
      interZoneLatencyVariation:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar latencyVariation"
      interZoneThroughput:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar throughputUl\
          \ and throughputDl"
      interZonePacketLoss:
        type: "number"
        format: "double"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar packetLoss"
      meta:
        type: "object"
        description: "Key/Value Pair Map (string, string)"
        additionalProperties:
          type: "string"
      userMeta:
        type: "object"
        description: "Key/Value Pair Map (string, string)"
        additionalProperties:
          type: "string"
      cellularDomainConfig:
        $ref: "#/definitions/CellularDomainConfig"
      zones:
        type: "array"
        items:
          $ref: "#/definitions/Zone"
    description: "Operator domain object"
    example: {}
  CellularDomainConfig:
    type: "object"
    properties:
      mnc:
        type: "string"
        description: "Mobile Network Code part of PLMN identity as defined in ETSI\
          \ TS 136 413"
      mcc:
        type: "string"
        description: "Mobile Country Code part of PLMN identity as defined in ETSI\
          \ TS 136 413"
      defaultCellId:
        type: "string"
        description: "The E-UTRAN Cell Identity as defined in ETSI TS 136 413 if no\
          \ cellId is defined for the cell or if not applicable"
    description: "Cellular domain configuration information"
    example: {}
  Zone:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique zone ID"
      name:
        type: "string"
        description: "Zone name"
      type:
        type: "string"
        description: "Zone type"
        enum:
        - "ZONE"
        - "COMMON"
      netChar:
        $ref: "#/definitions/NetworkCharacteristics"
      interFogLatency:
        type: "integer"
        description: "**DEPRECATED** As of release 1.3.0, no longer supported"
      interFogLatencyVariation:
        type: "integer"
        description: "**DEPRECATED** As of release 1.3.0, no longer supported"
      interFogThroughput:
        type: "integer"
        description: "**DEPRECATED** As of release 1.3.0, no longer supported"
      interFogPacketLoss:
        type: "number"
        format: "double"
        description: "**DEPRECATED** As of release 1.3.0, no longer supported"
      interEdgeLatency:
        type: "integer"
        description: "**DEPRECATED** As of release 1.3.0, no longer supported"
      interEdgeLatencyVariation:
        type: "integer"
        description: "**DEPRECATED** As of release 1.3.0, no longer supported"
      interEdgeThroughput:
        type: "integer"
        description: "**DEPRECATED** As of release 1.3.0, no longer supported"
      interEdgePacketLoss:
        type: "number"
        format: "double"
        description: "**DEPRECATED** As of release 1.3.0, no longer supported"
      edgeFogLatency:
        type: "integer"
        description: "**DEPRECATED** As of release 1.3.0, replaced by netChar latency"
      edgeFogLatencyVariation:
        type: "integer"
        description: "**DEPRECATED** As of release 1.3.0, replaced by netChar latencyVariation"
      edgeFogThroughput:
        type: "integer"
        description: "**DEPRECATED** As of release 1.3.0, replaced by netChar throughput"
      edgeFogPacketLoss:
        type: "number"
        format: "double"
        description: "**DEPRECATED** As of release 1.3.0, replaced by netChar packetLoss"
      meta:
        type: "object"
        description: "Key/Value Pair Map (string, string)"
        additionalProperties:
          type: "string"
      userMeta:
        type: "object"
        description: "Key/Value Pair Map (string, string)"
        additionalProperties:
          type: "string"
      networkLocations:
        type: "array"
        items:
          $ref: "#/definitions/NetworkLocation"
    description: "Logical zone (MEC network) object"
    example: {}
  NetworkLocation:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique network location ID"
      name:
        type: "string"
        description: "Network location name"
      type:
        type: "string"
        description: "Network location type"
        enum:
        - "POA"
        - "POA-4G"
        - "POA-5G"
        - "POA-WIFI"
        - "DEFAULT"
      netChar:
        $ref: "#/definitions/NetworkCharacteristics"
      terminalLinkLatency:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar latency"
      terminalLinkLatencyVariation:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar latencyVariation"
      terminalLinkThroughput:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar throughputUl\
          \ and throughputDl"
      terminalLinkPacketLoss:
        type: "number"
        format: "double"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar packetLoss"
      meta:
        type: "object"
        description: "Key/Value Pair Map (string, string)"
        additionalProperties:
          type: "string"
      userMeta:
        type: "object"
        description: "Key/Value Pair Map (string, string)"
        additionalProperties:
          type: "string"
      cellularPoaConfig:
        $ref: "#/definitions/CellularPoaConfig"
      poa4GConfig:
        $ref: "#/definitions/Poa4GConfig"
      poa5GConfig:
        $ref: "#/definitions/Poa5GConfig"
      poaWifiConfig:
        $ref: "#/definitions/PoaWifiConfig"
      geoData:
        $ref: "#/definitions/GeoData"
      physicalLocations:
        type: "array"
        items:
          $ref: "#/definitions/PhysicalLocation"
    description: "Logical network location object"
    example: {}
  CellularPoaConfig:
    type: "object"
    properties:
      cellId:
        type: "string"
        description: "The E-UTRAN Cell Identity as defined in ETSI TS 136 413 including\
          \ the ID of the eNB serving the cell"
    description: "**DEPRECATED** As of release 1.5.1, renamed to poa4GConfig"
  Poa4GConfig:
    type: "object"
    properties:
      cellId:
        type: "string"
        description: "The E-UTRAN Cell Identity as defined in ETSI TS 136 413 including\
          \ the ID of the eNB serving the cell"
    description: "Cellular 4G POA configuration information"
  Poa5GConfig:
    type: "object"
    properties:
      cellId:
        type: "string"
        description: "The E-UTRAN Cell Identity as defined in ETSI TS 136 413 including\
          \ the ID of the NR serving the cell"
    description: "Cellular 5G POA configuration information"
  PoaWifiConfig:
    type: "object"
    properties:
      macId:
        type: "string"
        description: "WIFI POA MAC Address"
    description: "WIFI POA configuration information"
  GeoData:
    type: "object"
    properties:
      location:
        $ref: "#/definitions/Point"
      radius:
        type: "number"
        description: "Optional - Radius (in meters) around the location"
      path:
        $ref: "#/definitions/LineString"
      eopMode:
        type: "string"
        description: "End-of-Path mode: <li>LOOP: When path endpoint is reached, start\
          \ over from the beginning <li>REVERSE: When path endpoint is reached, return\
          \ on the reverse path"
        enum:
        - "LOOP"
        - "REVERSE"
      velocity:
        type: "number"
        description: "Speed of movement along path in m/s"
    description: "Geographic data"
  Point:
    type: "object"
    required:
    - "type"
    properties:
      type:
        type: "string"
        description: "Must be Point"
        enum:
        - "Point"
      coordinates:
        type: "array"
        description: "For a Point, coordinates MUST be an array of two decimal numbers;\
          \ longitude and latitude precisely in that order"
        items:
          type: "number"
    externalDocs:
      url: "https://tools.ietf.org/html/rfc7946"
    description: "A single position in coordinate space (GeoJSON); a position is an\
      \ array of two numbers"
  LineString:
    type: "object"
    required:
    - "type"
    properties:
      type:
        type: "string"
        description: "Must be LineString"
        enum:
        - "LineString"
      coordinates:
        type: "array"
        description: "For a LineString, coordinates is an array of two or more positions;\
          \ a position is an array of two decimal numbers (longitude and latitude\
          \ precisely in that order)"
        items:
          type: "array"
          items:
            type: "number"
    externalDocs:
      url: "https://tools.ietf.org/html/rfc7946"
    description: "An array of two or more positions in coordinate space (GeoJSON);\
      \ a position is an array of two numbers"
  PhysicalLocation:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique physical location ID"
      name:
        type: "string"
        description: "Physical location name"
      type:
        type: "string"
        description: "Physical location type"
        enum:
        - "UE"
        - "FOG"
        - "EDGE"
        - "CN"
        - "DC"
      isExternal:
        type: "boolean"
        description: "true: Physical location is external to MEEP\nfalse: Physical\
          \ location is internal to MEEP"
      geoData:
        $ref: "#/definitions/GeoData"
      networkLocationsInRange:
        type: "array"
        items:
          type: "string"
          description: "Names of network locations within range of physical location"
      connected:
        type: "boolean"
        description: "true: Physical location has network connectivity\nfalse: Physical\
          \ location has no network connectivity"
      wireless:
        type: "boolean"
        description: "true: Physical location uses a wireless connection\nfalse: Physical\
          \ location uses a wired connection"
      wirelessType:
        type: "string"
        description: "Prioritized, comma-separated list of supported wireless connection\
          \ types.\nDefault priority if not specififed is 'wifi,5g,4g,other'.\nWireless\
          \ connection types:\n- 4g\n- 5g\n- wifi\n- other"
      dataNetwork:
        $ref: "#/definitions/DNConfig"
      meta:
        type: "object"
        description: "Key/Value Pair Map (string, string)"
        additionalProperties:
          type: "string"
      userMeta:
        type: "object"
        description: "Key/Value Pair Map (string, string)"
        additionalProperties:
          type: "string"
      processes:
        type: "array"
        items:
          $ref: "#/definitions/Process"
      netChar:
        $ref: "#/definitions/NetworkCharacteristics"
      linkLatency:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar latency"
      linkLatencyVariation:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar latencyVariation"
      linkThroughput:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar throughputUl\
          \ and throughputDl"
      linkPacketLoss:
        type: "number"
        format: "double"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar packetLoss"
      macId:
        type: "string"
        description: "Physical location MAC Address"
    description: "Physical location object"
    example: {}
  DNConfig:
    type: "object"
    properties:
      dnn:
        type: "string"
        description: "Data Network Name"
      ladn:
        type: "boolean"
        description: "true: Data network serves local area only\nfalse: Data network\
          \ is not limited to local area"
      ecsp:
        type: "string"
        description: "Edge Compute Service Provider"
    description: "Data Network Configuration"
    example: {}
  Process:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique process ID"
      name:
        type: "string"
        description: "Process name"
      type:
        type: "string"
        description: "Process type"
        enum:
        - "UE-APP"
        - "EDGE-APP"
        - "MEC-SVC"
        - "CLOUD-APP"
      isExternal:
        type: "boolean"
        description: "true: process is external to MEEP\nfalse: process is internal\
          \ to MEEP"
      image:
        type: "string"
        description: "Docker image to deploy inside MEEP"
      environment:
        type: "string"
        description: "Environment variables using the format NAME=\"value\",NAME=\"\
          value\",NAME=\"value\""
      commandArguments:
        type: "string"
        description: "Arguments to command executable"
      commandExe:
        type: "string"
        description: "Executable to invoke at container start up"
      serviceConfig:
        $ref: "#/definitions/ServiceConfig"
      gpuConfig:
        $ref: "#/definitions/GpuConfig"
      memoryConfig:
        $ref: "#/definitions/MemoryConfig"
      cpuConfig:
        $ref: "#/definitions/CpuConfig"
      externalConfig:
        $ref: "#/definitions/ExternalConfig"
      status:
        type: "string"
        description: "Process status"
      userChartLocation:
        type: "string"
        description: "Chart location for the deployment of the chart provided by the\
          \ user"
      userChartAlternateValues:
        type: "string"
        description: "Chart values.yaml file location for the deployment of the chart\
          \ provided by the user"
      userChartGroup:
        type: "string"
        description: "Chart supplemental information related to the group (service)"
      meta:
        type: "object"
        description: "Key/Value Pair Map (string, string)"
        additionalProperties:
          type: "string"
      userMeta:
        type: "object"
        description: "Key/Value Pair Map (string, string)"
        additionalProperties:
          type: "string"
      netChar:
        $ref: "#/definitions/NetworkCharacteristics"
      appLatency:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar latency"
      appLatencyVariation:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar latencyVariation"
      appThroughput:
        type: "integer"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar throughputUl\
          \ and throughputDl"
      appPacketLoss:
        type: "number"
        format: "double"
        description: "**DEPRECATED** As of release 1.5.0, replaced by netChar packetLoss"
      placementId:
        type: "string"
        description: "Identifier used for process placement in AdvantEDGE cluster"
    description: "Application or service object"
    example: {}
  ServiceConfig:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Unique service name"
      meSvcName:
        type: "string"
        description: "Multi-Edge service name, if any"
      ports:
        type: "array"
        items:
          $ref: "#/definitions/ServicePort"
    description: "Service object"
    example: {}
  ServicePort:
    type: "object"
    properties:
      protocol:
        type: "string"
        description: "Protocol that the application is using (TCP or UDP)"
      port:
        type: "integer"
        description: "Port number that the service is listening on"
      externalPort:
        type: "integer"
        description: "External port number on which to expose the application (30000\
          \ - 32767)  <li>Only one application allowed per external port <li>Scenario\
          \ builder must configure to prevent conflicts\n"
    description: "Service port object"
    example: {}
  GpuConfig:
    type: "object"
    properties:
      type:
        type: "string"
        description: "Requested GPU type"
      count:
        type: "integer"
        description: "Number of GPUs requested"
    description: "GPU configuration object"
  MemoryConfig:
    type: "object"
    properties:
      min:
        type: "integer"
        description: "Minimum requested memory"
      max:
        type: "integer"
        description: "Maximum requested memory"
    description: "Memory configuration object"
  CpuConfig:
    type: "object"
    properties:
      min:
        type: "number"
        format: "float"
        description: "Minimum requested CPU"
      max:
        type: "number"
        format: "float"
        description: "Maximum requested CPU"
    description: "CPU configuration object"
  ExternalConfig:
    type: "object"
    properties:
      ingressServiceMap:
        type: "array"
        items:
          $ref: "#/definitions/IngressService"
      egressServiceMap:
        type: "array"
        items:
          $ref: "#/definitions/EgressService"
    description: "External Process configuration.\nNOTE: Only valid if 'isExternal'\
      \ is set."
    example: {}
  IngressService:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Service name (unique or multi-edge)"
      port:
        type: "integer"
        description: "Internal service port number"
      externalPort:
        type: "integer"
        description: "Externally-exposed unique service port in range (30000 - 32767)"
      protocol:
        type: "string"
        description: "Service protocol (TCP or UDP)"
    description: "Internal service exposed externally via specific port"
  EgressService:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Service name"
      meSvcName:
        type: "string"
        description: "Multi-Edge service name, if any"
      ip:
        type: "string"
        description: "External node IP address"
      port:
        type: "integer"
        description: "Service port number"
      protocol:
        type: "string"
        description: "Service protocol (TCP or UDP)"
    description: "External service exposed internally via specific port"
  ActivationInfo:
    type: "object"
    properties:
      replayFileName:
        type: "string"
        description: "Replay-file name to execute at deployment time"
    description: "Activation information"
    example: {}
  NodeServiceMaps:
    type: "object"
    properties:
      node:
        type: "string"
        description: "Unique external node identifier"
      ingressServiceMap:
        type: "array"
        items:
          $ref: "#/definitions/IngressService"
      egressServiceMap:
        type: "array"
        items:
          $ref: "#/definitions/EgressService"
    description: "Node-specific mapping of exposed internal & external services"
    example: {}
  Domains:
    type: "object"
    properties:
      domains:
        type: "array"
        items:
          $ref: "#/definitions/Domain"
    example:
      domains:
      - {}
      - {}
  Zones:
    type: "object"
    properties:
      zones:
        type: "array"
        items:
          $ref: "#/definitions/Zone"
    example:
      zones:
      - {}
      - {}
  NetworkLocations:
    type: "object"
    properties:
      networkLocations:
        type: "array"
        items:
          $ref: "#/definitions/NetworkLocation"
    example:
      networkLocations:
      - {}
      - {}
  PhysicalLocations:
    type: "object"
    properties:
      physicalLocations:
        type: "array"
        items:
          $ref: "#/definitions/PhysicalLocation"
    example:
      physicalLocations:
      - {}
      - {}
  Processes:
    type: "object"
    properties:
      processes:
        type: "array"
        items:
          $ref: "#/definitions/Process"
    example:
      processes:
      - {}
      - {}
  Event:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Event name"
      type:
        type: "string"
        description: "Event type"
        enum:
        - "MOBILITY"
        - "NETWORK-CHARACTERISTICS-UPDATE"
        - "POAS-IN-RANGE"
        - "SCENARIO-UPDATE"
        - "PDU-SESSION"
      eventMobility:
        $ref: "#/definitions/EventMobility"
      eventNetworkCharacteristicsUpdate:
        $ref: "#/definitions/EventNetworkCharacteristicsUpdate"
      eventPoasInRange:
        $ref: "#/definitions/EventPoasInRange"
      eventScenarioUpdate:
        $ref: "#/definitions/EventScenarioUpdate"
      eventPduSession:
        $ref: "#/definitions/EventPduSession"
    description: "Event object"
    example:
      name: "name"
      type: "MOBILITY"
      eventMobility:
        elementName: "ue1"
        dest: "poa2"
  EventMobility:
    type: "object"
    properties:
      elementName:
        type: "string"
        description: "Name of the network element to be updated"
      dest:
        type: "string"
        description: "Destination element identifier or 'DISCONNECTED'"
    description: "Mobility Event object"
    example:
      elementName: "ue1"
      dest: "poa2"
  EventNetworkCharacteristicsUpdate:
    type: "object"
    properties:
      elementName:
        type: "string"
        description: "Name of the network element to be updated"
      elementType:
        type: "string"
        description: "Type of the network element to be updated"
        enum:
        - "SCENARIO"
        - "OPERATOR"
        - "OPERATOR-CELLULAR"
        - "ZONE"
        - "POA"
        - "POA-4G"
        - "POA-5G"
        - "POA-WIFI"
        - "EDGE"
        - "FOG"
        - "UE"
        - "DC"
        - "UE-APP"
        - "EDGE-APP"
        - "CLOUD-APP"
      netChar:
        $ref: "#/definitions/NetworkCharacteristics"
    description: "Network Characteristics update Event object"
    example: {}
  EventPoasInRange:
    type: "object"
    properties:
      ue:
        type: "string"
        description: "UE identifier"
      poasInRange:
        type: "array"
        items:
          type: "string"
          description: "POAs visible to UE"
    description: "POAs In Range Event object"
    example:
      ue: "ue"
      poasInRange:
      - "poa1"
      - "poa2"
  EventScenarioUpdate:
    type: "object"
    properties:
      action:
        type: "string"
        description: "Action to perform on provided scenario node"
        enum:
        - "ADD"
        - "REMOVE"
        - "MODIFY"
      node:
        $ref: "#/definitions/ScenarioNode"
      gracePeriod:
        type: "integer"
        description: "Grace period in seconds before forcefully removing node"
    description: "Scenario Update Event object.<br> Specifies a scenario update action\
      \ to perform on the provided node.\n<p>Supported Actions: <li>ADD - Add node\
      \ to scenario. Only the provided node is added; child nodes in node data are\
      \ ignored. <li>REMOVE - Remove node from scenario. Only node name is required\
      \ in node data for this action; parent is ignored. <li>MODIFY - Modifies scenario\
      \ node.\n<p>NOTES: <li>Current backend implementation supports only PhysicalLocation\
      \ & Process network elements. <li>Grace period only applies when removing a\
      \ node. Default value is 0, triggering an immediate node removal."
    example: {}
  ScenarioNode:
    type: "object"
    properties:
      type:
        type: "string"
        description: "Node type"
        enum:
        - "UE"
        - "FOG"
        - "EDGE"
        - "UE-APP"
        - "EDGE-APP"
        - "CLOUD-APP"
      nodeDataUnion:
        $ref: "#/definitions/NodeDataUnion"
      parent:
        type: "string"
        description: "Parent node name"
      children:
        type: "array"
        description: "List of child node names"
        items:
          type: "string"
    description: "Scenario node object"
    example: {}
  NodeDataUnion:
    type: "object"
    properties:
      physicalLocation:
        $ref: "#/definitions/PhysicalLocation"
      process:
        $ref: "#/definitions/Process"
    description: "Union of node data objects\nNOTE: Only one of the following objects\
      \ must be filled"
    example: {}
  EventPduSession:
    type: "object"
    properties:
      action:
        type: "string"
        description: "PDU Session action to perform for provided UE"
        enum:
        - "ADD"
        - "REMOVE"
      pduSession:
        $ref: "#/definitions/PDUSession"
    description: "PDU Session Event object.<br> Specifies a PDU session action to\
      \ perform for the provided UE.\n<p>Supported Actions: <li>ADD - Create new PDU\
      \ Session from UE to target data network. <li>REMOVE - Remove active PDU Session.\
      \ Only UE name & PDU session ID are required."
    example: {}
  PDUSession:
    type: "object"
    properties:
      ue:
        type: "string"
        description: "UE name as defined in the scenario"
      id:
        type: "string"
        description: "PDU Session ID"
      info:
        $ref: "#/definitions/PDUSessionInfo"
    description: "PDU Session"
    example: {}
  PDUSessionInfo:
    type: "object"
    properties:
      dnn:
        type: "string"
        description: "Data Network Name as defined in the scenario"
  ReplayFileList:
    type: "object"
    properties:
      replay-files:
        type: "array"
        items:
          type: "string"
    description: "Replay-file list"
    example: {}
  ReplayStatus:
    type: "object"
    properties:
      replayFileRunning:
        type: "string"
        description: "Name of the replay file currently running"
        readOnly: true
      index:
        type: "integer"
        description: "Index of the last ran event"
        readOnly: true
      maxIndex:
        type: "integer"
        description: "Number of events in the replay file"
        readOnly: true
      loopMode:
        type: "boolean"
        description: "Loop mode enables"
        readOnly: true
      timeRemaining:
        type: "integer"
        description: "Total time remaining for the replay file after last event"
      timeToNextEvent:
        type: "integer"
        description: "Time remaining until the next event for the replay file after\
          \ last event"
    description: "Replay status object"
    example: {}
  Replay:
    type: "object"
    properties:
      description:
        type: "string"
        description: "User description of the content of the replay file."
      events:
        type: "array"
        items:
          $ref: "#/definitions/ReplayEvent"
    description: "ReplayEvents from the Replay-file"
    example: {}
  ReplayEvent:
    type: "object"
    properties:
      index:
        type: "integer"
        description: "Event index"
        readOnly: true
      time:
        type: "integer"
        description: "Relative time (ms) an event happened since the begining of a\
          \ replay sequence"
      event:
        $ref: "#/definitions/Event"
    description: "Replay event object"
    example: {}
  ReplayInfo:
    type: "object"
    properties:
      scenarioName:
        type: "string"
        description: "Scenario name"
      description:
        type: "string"
        description: "User description of the replay file"
    description: "Scenario information"
    example: {}
  PDUSessionList:
    type: "object"
    properties:
      sessions:
        type: "array"
        items:
          $ref: "#/definitions/PDUSession"
    description: "PDUSession list"
    example: {}
  ApplicationInfo:
    type: "object"
    required:
    - "name"
    - "nodeName"
    properties:
      id:
        type: "string"
        description: "Application Instance UUID"
      name:
        type: "string"
        description: "Application name"
      nodeName:
        type: "string"
        description: "Name of node where application instance is running"
      type:
        type: "string"
        description: "Application Type"
        enum:
        - "USER"
        - "SYSTEM"
      persist:
        type: "boolean"
        description: "Reserved for internal platform usage"
    description: "MEC Application instance information"
    example:
      id: "00afec52-f0b6-464e-a660-33568c0975b9"
      name: "MyAppName"
      nodeName: "node1"
      type: "USER"
  ServiceInfo:
    type: "object"
    required:
    - "appId"
    - "id"
    properties:
      appId:
        type: "string"
        description: "Application Instance UUID"
      id:
        type: "string"
        description: "Service Instance UUID"
    description: "MEC Service information"
    example:
      appId: "00afec52-f0b6-464e-a660-33568c0975b9"
      id: "b8a203be-ac81-45a6-8d88-fdb1f8f5393b"
parameters:
  Body.ActivationInfo:
    in: "body"
    name: "activationInfo"
    description: "Activation information"
    required: false
    schema:
      $ref: "#/definitions/ActivationInfo"
    x-exportParamName: "ActivationInfo"
  Body.ApplicationInfo:
    in: "body"
    name: "applicationInfo"
    description: "Application information"
    required: true
    schema:
      $ref: "#/definitions/ApplicationInfo"
    x-exportParamName: "ApplicationInfo"
  Body.Event:
    in: "body"
    name: "event"
    description: "Event to send to active scenario"
    required: true
    schema:
      $ref: "#/definitions/Event"
    x-exportParamName: "Event"
  Body.PduSessionInfo:
    in: "body"
    name: "pduSessionInfo"
    description: "PDU session information"
    required: true
    schema:
      $ref: "#/definitions/PDUSessionInfo"
    x-exportParamName: "PduSessionInfo"
  Body.ReplayInfo:
    in: "body"
    name: "replayInfo"
    description: "Replay information"
    required: true
    schema:
      $ref: "#/definitions/ReplayInfo"
    x-exportParamName: "ReplayInfo"
  Body.ReplayFile:
    in: "body"
    name: "replay-file"
    description: "Replay-file"
    required: true
    schema:
      $ref: "#/definitions/Replay"
    x-exportParamName: "ReplayFile"
  Path.AppInstanceId:
    name: "appInstanceId"
    in: "path"
    description: "Represents a MEC application instance. Note that the appInstanceId\
      \ is allocated by the MEC application manager POST method."
    required: true
    type: "string"
    x-exportParamName: "AppInstanceId"
  Path.PduSessionId:
    name: "pduSessionId"
    in: "path"
    description: "a UE provided identifier for the PDU Session"
    required: true
    type: "string"
    x-exportParamName: "PduSessionId"
  Path.ReplayFileName:
    name: "name"
    in: "path"
    description: "replay file name"
    required: true
    type: "string"
    x-exportParamName: "Name"
  Path.EventType:
    name: "type"
    in: "path"
    description: "Event type"
    required: true
    type: "string"
    x-exportParamName: "Type_"
  Path.UeName:
    name: "ueName"
    in: "path"
    description: "UE unique identifier from the scenario"
    required: true
    type: "string"
    x-exportParamName: "UeName"
  Query.AppInstanceId:
    name: "appInstanceId"
    in: "query"
    description: "MEC application instance identifier"
    required: false
    type: "string"
    x-exportParamName: "AppInstanceId"
    x-optionalDataType: "String"
  Query.AppName:
    name: "app"
    in: "query"
    description: "Application name"
    required: false
    type: "string"
    x-exportParamName: "App"
    x-optionalDataType: "String"
  Query.AppType:
    name: "type"
    in: "query"
    description: "Application type"
    required: false
    type: "string"
    enum:
    - "USER"
    - "SYSTEM"
    x-exportParamName: "Type_"
    x-optionalDataType: "String"
  Query.Domain:
    name: "domain"
    in: "query"
    description: "Domain name"
    required: false
    type: "string"
    x-exportParamName: "Domain"
    x-optionalDataType: "String"
  Query.DomainType:
    name: "domainType"
    in: "query"
    description: "Domain type"
    required: false
    type: "string"
    enum:
    - "OPERATOR"
    - "OPERATOR-CELLULAR"
    x-exportParamName: "DomainType"
    x-optionalDataType: "String"
  Query.ExcludeChildren:
    name: "excludeChildren"
    in: "query"
    description: "Include child elements in response"
    required: false
    type: "boolean"
    x-exportParamName: "ExcludeChildren"
    x-optionalDataType: "Bool"
  Query.Minimize:
    name: "minimize"
    in: "query"
    description: "Return minimized scenario element content"
    required: false
    type: "boolean"
    x-exportParamName: "Minimize"
    x-optionalDataType: "Bool"
  Query.NetworkLocation:
    name: "networkLocation"
    in: "query"
    description: "Network Location name"
    required: false
    type: "string"
    x-exportParamName: "NetworkLocation"
    x-optionalDataType: "String"
  Query.NetworkLocationType:
    name: "networkLocationType"
    in: "query"
    description: "Network Location type"
    required: false
    type: "string"
    enum:
    - "POA"
    - "POA-4G"
    - "POA-5G"
    - "POA-WIFI"
    x-exportParamName: "NetworkLocationType"
    x-optionalDataType: "String"
  Query.Node:
    name: "node"
    in: "query"
    description: "Unique node identifier"
    required: false
    type: "string"
    x-exportParamName: "Node"
    x-optionalDataType: "String"
  Query.NodeName:
    name: "nodeName"
    in: "query"
    description: "Node name"
    required: false
    type: "string"
    x-exportParamName: "NodeName"
    x-optionalDataType: "String"
  Query.PduSessionId:
    name: "id"
    in: "query"
    description: "Return PDU session matching provided PDU session ID"
    required: false
    type: "string"
    x-exportParamName: "Id"
    x-optionalDataType: "String"
  Query.PhysicalLocation:
    name: "physicalLocation"
    in: "query"
    description: "Physical Location name"
    required: false
    type: "string"
    x-exportParamName: "PhysicalLocation"
    x-optionalDataType: "String"
  Query.PhysicalLocationType:
    name: "physicalLocationType"
    in: "query"
    description: "Physical Location type"
    required: false
    type: "string"
    enum:
    - "DC"
    - "EDGE"
    - "FOG"
    - "UE"
    x-exportParamName: "PhysicalLocationType"
    x-optionalDataType: "String"
  Query.Process:
    name: "process"
    in: "query"
    description: "Process name"
    required: false
    type: "string"
    x-exportParamName: "Process"
    x-optionalDataType: "String"
  Query.ProcessType:
    name: "processType"
    in: "query"
    description: "Process type"
    required: false
    type: "string"
    enum:
    - "CLOUD-APP"
    - "EDGE-APP"
    - "UE-APP"
    x-exportParamName: "ProcessType"
    x-optionalDataType: "String"
  Query.ScenarioName:
    name: "name"
    in: "path"
    description: "Scenario name"
    required: true
    type: "string"
    x-exportParamName: "Name"
  Query.Service:
    name: "service"
    in: "query"
    description: "Exposed service name"
    required: false
    type: "string"
    x-exportParamName: "Service"
    x-optionalDataType: "String"
  Query.Type:
    name: "type"
    in: "query"
    description: "Exposed service type (ingress or egress)"
    required: false
    type: "string"
    x-exportParamName: "Type_"
    x-optionalDataType: "String"
  Query.UeName:
    name: "ue"
    in: "query"
    description: "Return PDU sessions matching provided UE name"
    required: false
    type: "string"
    x-exportParamName: "Ue"
    x-optionalDataType: "String"
  Query.Zone:
    name: "zone"
    in: "query"
    description: "Zone name"
    required: false
    type: "string"
    x-exportParamName: "Zone"
    x-optionalDataType: "String"
responses:
  Std200:
    description: "OK"
  Std201:
    description: "Created"
  Std204:
    description: "No Content"
  Std400:
    description: "Bad Request"
  Std401:
    description: "Unauthorized"
  Std404:
    description: "Not Found"
  Std500:
    description: "Internal server error"
externalDocs:
  description: "GitHub Wiki"
  url: "https://github.com/InterDigitalInc/AdvantEDGE/wiki"
